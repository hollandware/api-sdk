{"version":3,"sources":["webpack:///its123api.min.js","webpack:///webpack/bootstrap 0f06f0c3a423a6775b89","webpack:///./src/main.js","webpack:///./src/Api/Its123.js","webpack:///./src/util/request.js","webpack:///./src/util/promise.js","webpack:///./src/util/storage.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_Its","_Its2","window","Its123","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_request","_request2","_promise","_storage","defaultApiConfig","domain","version","logErrors","environment","elements","instrumentFormSelector","loadingElementId","productElementId","reportElementId","loadingElement","productElement","reportElement","maxRetries","retryDelay","apiKey","apiConfig","undefined","this","api","endpoint","Error","document","getElementById","eventListeners","productId","_this","_ref","_ref$renderReport","renderReport","_ref$storage","storage","_ref$user","user","product","promise","style","display","loadFromStorage","requestProduct","then","storeInStorage","instruments","slots","triggerEvent","filter","status","getInstrumentStatusFromStorage","access_code","accessCode","reduce","previousStep","_ref2","requestInstrument","result","processApiInstrumentResponse","Promise","resolve","loadReport","reports","clearStorage","e","handleException","_this2","_ref3","metaData","metaHmac","requestReport","body","_ref4","_this3","resources","updateInstrumentInStorage","loadResources","renderInstrument","loadInstrumentStateFromStorage","bindInstrumentStorageListeners","runResourceFunctions","waitForInstrumentToSubmit","_ref5","form","tryAtMost","submitInstrumentData","_this4","headers","Content-Type","X-123test-ApiKey","X-123test-ProductId","method","mode","response","json","product_access_code","error","cache","X-123test-InstrumentRun","text","get","JSON","parse","querySelector","addEventListener","event","preventDefault","buttons","getElementsByTagName","b","disabled","FormData","innerHTML","_loop","input","type","saveToStorage","name","getFromStorage","checked","all","keys","map","reject","resourceItem","head","querySelectorAll","path","script","createElement","src","async","onload","appendChild","cssLink","rel","media","href","_this5","forEach","resource","its123","func","_ref6","_ref6$metaData","_ref6$metaHmac","url","productData","started","Date","now","stringify","expirationTime","item","console","info","productJson","removeFromStorage","removeFromStorageByPrefix","message","typeName","report","find","r","eventName","data","listeners","l","callback","_this6","events","Array","isArray","push","checkStatus","statusText","request","options","timeout","timeoutPromise","fetch","ms","timeoutId","setTimeout","res","clearTimeout","err","fn","timeoutFactor","current","storeAvailable","store","setItem","getItem","removeItem","prefix","startsWith","localStorage","testItem"],"mappings":"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","file":"its123api.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Its = __webpack_require__(1);\n\t\n\tvar _Its2 = _interopRequireDefault(_Its);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// Bind Its123 to the global window\n\twindow.Its123 = _Its2['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\test Api v2\n\tn\tauthor Wouter Bulten <github.com/wouterbulten>\n\tauthor Theo den Hollander <github.com/theodenhollander>\n\tlicense\n\the MIT License (MIT)\n\tn\topyright (c) 2015 123test\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\the above copyright notice and this permission notice shall be included in all\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * copies or substantial portions of the Software.\n\tn\tn\tn\tn\tn\tn\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * SOFTWARE.\n\tn\t\n\tvar _request = __webpack_require__(2);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _promise = __webpack_require__(3);\n\t\n\tvar _storage = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Default configuration for api, can be overriden by user\n\t * @type {Object}\n\t */\n\tvar defaultApiConfig = {\n\t  // Domain config\n\t  domain: 'https://api.123test.com',\n\t  version: 'v2',\n\t\n\t  // Environment config\n\t  logErrors: true,\n\t  environment: 'production',\n\t\n\t  // DOM config\n\t  elements: {\n\t    instrumentFormSelector: 'form.its123-instrument',\n\t    loadingElementId: 'its123api-loading',\n\t    productElementId: 'its123api-product',\n\t    reportElementId: 'its123api-report',\n\t    loadingElement: null,\n\t    productElement: null,\n\t    reportElement: null\n\t  },\n\t\n\t  // Number of retries some fetch request may make\n\t  maxRetries: 2,\n\t  // Initial delay before a retry\n\t  retryDelay: 5000,\n\t\n\t  apiKey: 'not-set'\n\t};\n\t\n\t/**\n\t * Main API class\n\t */\n\t\n\tvar Its123 = function () {\n\t\n\t  /**\n\t   * Create new Api object\n\t   * @param  {Object} [apiConfig={}] Api configuration\n\t   * @return {void}\n\t   */\n\t  function Its123() {\n\t    var apiConfig = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, Its123);\n\t\n\t    // Set api config to default and override with parameters\n\t    this.api = _extends({}, defaultApiConfig, apiConfig);\n\t    // Construct correct api end point\n\t    this.api.endpoint = this.api.domain + '/' + this.api.version;\n\t    // Set env based on domain\n\t    this.api.environment = this.api.domain === 'https://api.123test.dev' ? 'development' : 'production';\n\t\n\t    // Check for valid api key\n\t    if (this.api.apiKey === 'not-set') {\n\t      throw new Error('Api key must be set when initalising Its123 object. Please check your api config.');\n\t    }\n\t\n\t    // Query the DOM and set options\n\t    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n\t    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n\t    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n\t    if (!this.api.elements.loadingElement || !this.api.elements.productElement || !this.api.elements.reportElement) {\n\t      throw new Error('Element for loading, product or report not found. Please check your HTML and Api config.');\n\t    }\n\t\n\t    // Placeholder for eventlisteners\n\t    this.eventListeners = {};\n\t  }\n\t\n\t  /**\n\t   * Load a product\n\t   *\n\t   * Runs all the required sub steps from instrument to report. All promises are chained\n\t   * and the final promise returns the product data when resolved.\n\t   *\n\t   * Will automatically render the first report that is available. Set `renderReport` to false\n\t   * to counter this behaviour.\n\t   *\n\t   * Data structure of the product object:\n\t   *\n\t   * product = {\n\t   *  slots: {\n\t   *    instruments: [],\n\t   *    respondent: {},\n\t   *  },\n\t   *  reports: [],\n\t   *  access_code: null,\n\t   * };\n\t   *\n\t   * @param  {String} productId product to load\n\t   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n\t   *                                       report render functions\n\t   * @param  {Boolean} [storage=true]      Set to true to try loading product data\n\t   *                                       from local storage.\n\t   * @param  {String}  [user=''] Optional user UUID\n\t   * @return {Promise}\n\t   */\n\t\n\t\n\t  _createClass(Its123, [{\n\t    key: 'loadProduct',\n\t    value: function loadProduct(productId) {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var _ref$renderReport = _ref.renderReport;\n\t      var renderReport = _ref$renderReport === undefined ? true : _ref$renderReport;\n\t      var _ref$storage = _ref.storage;\n\t      var storage = _ref$storage === undefined ? true : _ref$storage;\n\t      var _ref$user = _ref.user;\n\t      var user = _ref$user === undefined ? '' : _ref$user;\n\t\n\t      var product = {};\n\t      var promise = void 0;\n\t\n\t      // Show loading div\n\t      this.api.elements.productElement.style.display = 'none';\n\t      this.api.elements.loadingElement.style.display = 'block';\n\t\n\t      if (storage) {\n\t        // Try to load product information from local storage, if it fails\n\t        // fall back to a API request\n\t        promise = this.loadFromStorage(productId, user)['catch'](function () {\n\t          return _this.requestProduct(productId, user)\n\t          // Store the requested product in the local store for future requests\n\t          .then(function (p) {\n\t            _this.storeInStorage(productId, p, user);\n\t            return p;\n\t          });\n\t        });\n\t      } else {\n\t        promise = this.requestProduct(productId, user);\n\t      }\n\t\n\t      promise = promise.then(function (p) {\n\t        product = p;\n\t        var instruments = product.slots.instruments;\n\t        _this.triggerEvent('instruments-loaded', instruments);\n\t\n\t        if (storage) {\n\t          // Filter any instruments that already have been completed\n\t          // Prevents unnecessary requests to the API\n\t          instruments = instruments.filter(function (i) {\n\t            var status = _this.getInstrumentStatusFromStorage(i.access_code);\n\t\n\t            switch (status) {\n\t              case 'ended-items':\n\t              case 'ended-skipped':\n\t              case 'ended-time':\n\t                _this.triggerEvent('instrument-already-completed', { accessCode: i.access_code, status: status });\n\t                return false;\n\t              case 'in-progress':\n\t                _this.triggerEvent('instrument-continue', { accessCode: i.access_code, status: status });\n\t                return true;\n\t              case 'started':\n\t              default:\n\t                return true;\n\t            }\n\t          });\n\t        }\n\t\n\t        // Run all instruments in series\n\t        // 'reduce' is used as a special construct to map a list of instruments\n\t        // to a chain of promises that resolve in series. The chain is fired by\n\t        // setting a 'Promise.resolve()' as the initial value.\n\t        return instruments.reduce(function (previousStep, _ref2) {\n\t          var accessCode = _ref2.access_code;\n\t          return previousStep.then(function () {\n\t            return _this.requestInstrument(accessCode);\n\t          }).then(function (result) {\n\t            _this.triggerEvent('instrument-started', { accessCode: accessCode, status: result.status });\n\t            return _this.processApiInstrumentResponse(accessCode, result, storage);\n\t          });\n\t        }, Promise.resolve());\n\t      });\n\t\n\t      if (renderReport) {\n\t        // All instruments have been completed, render report\n\t        promise = promise.then(function () {\n\t          return _this.loadReport(product.reports[0].access_code);\n\t        });\n\t      }\n\t\n\t      // Return initial promise and make sure that returning the product is the last step in the chain\n\t      return promise\n\t      // Remove this session from the local storage\n\t      .then(function () {\n\t        return _this.clearStorage(productId);\n\t      })\n\t      // Trigger event and pass product info\n\t      .then(function () {\n\t        return _this.triggerEvent('product-completed', product);\n\t      }).then(function () {\n\t        return product;\n\t      })\n\t      // Also add a catch, this removes the need of having individual catches for every fetch\n\t      ['catch'](function (e) {\n\t        if (storage) {\n\t          // Something could be wrong with our local store,\n\t          // clear it to prevent any future errors\n\t          _this.clearStorage(productId);\n\t        }\n\t        return _this.handleException(e);\n\t      });\n\t    }\n\t\n\t    /**\n\t    /**\n\t     * Load an render a report by its access code\n\t     * @param  {String} accessCode Access code for report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadReport',\n\t    value: function loadReport(accessCode) {\n\t      var _this2 = this;\n\t\n\t      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var metaData = _ref3.metaData;\n\t      var metaHmac = _ref3.metaHmac;\n\t\n\t      return this.requestReport(accessCode, { metaData: metaData, metaHmac: metaHmac }).then(function (body) {\n\t        return _this2.renderReport(body);\n\t      }).then(function () {\n\t        return _this2.triggerEvent('report-ready');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Process a single API response from an instrument call\n\t     *\n\t     * When the instrument is still running the function will return a new Promise\n\t     * that waits for a form submit.\n\t     *\n\t     * @param  {String} accessCode Access code for this instrument\n\t     * @param  {String} status     Current instrument status\n\t     * @param  {Array} resources  Resources to load\n\t     * @param  {String} body       Html to put in the DOM\n\t     * @param  {Boolean} storage   Whether to load instrument input data from local storage\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'processApiInstrumentResponse',\n\t    value: function processApiInstrumentResponse(accessCode, _ref4, storage) {\n\t      var _this3 = this;\n\t\n\t      var status = _ref4.status;\n\t      var resources = _ref4.resources;\n\t      var body = _ref4.body;\n\t\n\t      var promise = void 0;\n\t\n\t      switch (status) {\n\t        case 'started':\n\t        case 'in-progress':\n\t          this.updateInstrumentInStorage(accessCode, status);\n\t\n\t          promise = this.loadResources(resources).then(function () {\n\t            return _this3.renderInstrument(body);\n\t          });\n\t\n\t          // Try to load item data from local storage when enabled\n\t          if (storage) {\n\t            promise = promise.then(function () {\n\t              return _this3.loadInstrumentStateFromStorage(accessCode);\n\t            }).then(function () {\n\t              return _this3.bindInstrumentStorageListeners(accessCode);\n\t            });\n\t          }\n\t\n\t          return promise.then(function () {\n\t            return _this3.runResourceFunctions(resources);\n\t          }).then(function () {\n\t            return _this3.waitForInstrumentToSubmit();\n\t          }).then(function (_ref5) {\n\t            var form = _ref5.form;\n\t            return (0, _promise.tryAtMost)(_this3.api.maxRetries, _this3.api.retryDelay, function () {\n\t              return _this3.submitInstrumentData(accessCode, form);\n\t            });\n\t          })\n\t          // Run function again until instrument has ended\n\t          .then(function (result) {\n\t            return _this3.processApiInstrumentResponse(accessCode, result);\n\t          });\n\t        case 'ended-items':\n\t        case 'ended-skipped':\n\t        case 'ended-time':\n\t          this.updateInstrumentInStorage(accessCode, status);\n\t          this.triggerEvent('instrument-completed', { accessCode: accessCode, status: status });\n\t          return Promise.resolve();\n\t        default:\n\t          throw new Error('Unexpected instrument status ' + status);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * (Async) Request a product from the api\n\t     *\n\t     * Promise returns an object contains all the instruments\n\t     * @param  {String} productId      ID of the product\n\t     * @param  {String} user UUID v4\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProduct',\n\t    value: function requestProduct(productId, user) {\n\t      var _this4 = this;\n\t\n\t      var headers = {\n\t        'Content-Type': 'application/json',\n\t        'X-123test-ApiKey': this.api.apiKey,\n\t        'X-123test-ProductId': productId\n\t      };\n\t\n\t      if (user && user.length === 36) {\n\t        headers['X-123test-Respondent'] = user;\n\t      }\n\t\n\t      return (0, _request2['default'])(this.api.endpoint + '/product/request-product', {\n\t        method: 'GET',\n\t        mode: 'cors',\n\t        headers: headers\n\t      }).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        return {\n\t          slots: json.slots,\n\t          reports: json.reports,\n\t          product_access_code: json.product_access_code\n\t        };\n\t      })['catch'](function (error) {\n\t        switch (error.status) {\n\t          case 401:\n\t            _this4.triggerEvent('invalid-api-key', error.response, 'error');\n\t            break;\n\t          case 403:\n\t            _this4.triggerEvent('product-no-access', error.response, 'error');\n\t            break;\n\t          default:\n\t          // Do nothing\n\t        }\n\t\n\t        throw error;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get information about a specific product running\n\t     * @param  {String} accessCode Access code for product run\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProductInfo',\n\t    value: function requestProductInfo(accessCode) {\n\t      var headers = {\n\t        'Content-Type': 'application/json',\n\t        'X-123test-ApiKey': this.api.apiKey\n\t      };\n\t\n\t      return (0, _request2['default'])(this.api.endpoint + '/product/' + accessCode + '/overview', {\n\t        method: 'GET',\n\t        mode: 'cors',\n\t        headers: headers\n\t      }).then(function (response) {\n\t        return response.json();\n\t      }).then(function (json) {\n\t        return {\n\t          slots: json.slots,\n\t          reports: json.reports,\n\t          product_access_code: json.product_access_code\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * (Async) Request an instrument from the api\n\t     *\n\t     * Promise returns body and resources that need to be loaded\n\t     * @param  {String} accessCode Access code for the instrument\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestInstrument',\n\t    value: function requestInstrument(accessCode) {\n\t      return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t        method: 'GET',\n\t        cache: 'no-cache',\n\t        headers: {\n\t          'X-123test-ApiKey': this.api.apiKey,\n\t          'X-123test-InstrumentRun': accessCode\n\t        }\n\t      })\n\t      // reponse.text() returns a Promise so we add an extra closure here\n\t      // to also access the resource variable itself\n\t      .then(function (response) {\n\t        return response.text().then(function (body) {\n\t          return {\n\t            body: body,\n\t            status: response.headers.get('X-123test-InstrumentStatus'),\n\t            resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t          };\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Attach a listener to the instrument, makes use of a promise that resolves\n\t     * when the button is clicked.\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'waitForInstrumentToSubmit',\n\t    value: function waitForInstrumentToSubmit() {\n\t      var form = document.querySelector(this.api.elements.instrumentFormSelector);\n\t\n\t      // Return a new promise that resolves when the submit button is clicked\n\t      return new Promise(function (resolve) {\n\t        form.addEventListener('submit', function (event) {\n\t          event.preventDefault();\n\t\n\t          // Disable all buttons in the form\n\t          var buttons = event.target.getElementsByTagName('button');\n\t          for (var b = 0; b < buttons.length; b++) {\n\t            buttons[b].disabled = true;\n\t          }\n\t          resolve({ form: form, event: event });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Submit a form to the API for a given instrument\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @param  {Object} form       HTML Form\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'submitInstrumentData',\n\t    value: function submitInstrumentData(accessCode, form) {\n\t      return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t        method: 'POST',\n\t        cache: 'no-cache',\n\t        body: new FormData(form),\n\t        headers: {\n\t          'X-123test-ApiKey': this.api.apiKey,\n\t          'X-123test-InstrumentRun': accessCode\n\t        }\n\t      }).then(function (response) {\n\t        return response.text().then(function (body) {\n\t          return {\n\t            body: body,\n\t            status: response.headers.get('X-123test-InstrumentStatus'),\n\t            resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t          };\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Output an instrument to the DOM\n\t     * @param  {String} body Instrument HTML\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderInstrument',\n\t    value: function renderInstrument(body) {\n\t      this.api.elements.productElement.innerHTML = body;\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.productElement.style.display = 'initial';\n\t    }\n\t\n\t    /**\n\t     * Add event listeners to radio buttons in instruments\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'bindInstrumentStorageListeners',\n\t    value: function bindInstrumentStorageListeners(accessCode) {\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var _loop = function _loop(e) {\n\t        var input = elements[e];\n\t\n\t        if (input.type === 'radio') {\n\t          input.addEventListener('change', function () {\n\t            (0, _storage.saveToStorage)(accessCode + '-' + input.name, input.value);\n\t          });\n\t        }\n\t      };\n\t\n\t      for (var e = 0; e < elements.length; e++) {\n\t        _loop(e);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Apply stored instrument state to the DOM\n\t     * @param  {String} accessCode Access code of instrument\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStateFromStorage',\n\t    value: function loadInstrumentStateFromStorage(accessCode) {\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var loaded = false;\n\t      for (var e = 0; e < elements.length; e++) {\n\t        var _input = elements[e];\n\t        var value = (0, _storage.getFromStorage)(accessCode + '-' + _input.name);\n\t\n\t        if (value !== null && _input.type === 'radio' && _input.value === value) {\n\t          _input.checked = true;\n\t          loaded = true;\n\t        }\n\t      }\n\t\n\t      if (loaded) {\n\t        this.triggerEvent('instrument-item-data-loaded', { access_code: accessCode });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Render a report to the DOM\n\t     *\n\t     * @param  {String} body report body\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderReport',\n\t    value: function renderReport(body) {\n\t      this.api.elements.productElement.style.display = 'none';\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.reportElement.innerHTML = body;\n\t      this.api.elements.reportElement.style.display = 'initial';\n\t    }\n\t\n\t    /**\n\t     * Add new resources to the DOM\n\t     *\n\t     * Returns a new Promise that resolves when all critical assets have been loaded\n\t     * @param  {Object} resources The resources to load\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadResources',\n\t    value: function loadResources(resources) {\n\t      // Map each resource to a new Promise\n\t      // JS resources resolve when loaded\n\t      return Promise.all(Object.keys(resources).map(function (key) {\n\t        return new Promise(function (resolve, reject) {\n\t          var resourceItem = resources[key];\n\t          var head = document.getElementsByTagName('head')[0];\n\t\n\t          // Do not load resources that are already present\n\t          if (document.querySelectorAll('script[src=\"' + resourceItem.path + '\"]').length > 0) {\n\t            resolve();\n\t            return;\n\t          }\n\t          switch (resourceItem.type) {\n\t            case 'js':\n\t              {\n\t                var script = document.createElement('script');\n\t                script.src = resourceItem.path;\n\t                // Allow some files to not load asynchronous\n\t                script.async = resourceItem.async || false;\n\t                // Resolve when loaded\n\t                script.onload = resolve;\n\t                // Append to the head of the page\n\t                head.appendChild(script);\n\t              }\n\t              break;\n\t            case 'css':\n\t              {\n\t                var cssLink = document.createElement('link');\n\t                cssLink.rel = 'stylesheet';\n\t                cssLink.type = 'text/css';\n\t                cssLink.media = 'all';\n\t                cssLink.href = resourceItem.path;\n\t                // Append to the head of the page\n\t                head.appendChild(cssLink);\n\t\n\t                // Directy resolve css, not critical\n\t                resolve();\n\t              }\n\t              break;\n\t            default:\n\t              reject('Unknown resource type ' + resourceItem.type);\n\t          }\n\t        });\n\t      }));\n\t    }\n\t\n\t    /**\n\t     * Run functions for a list of JS resources\n\t     * @param  {Object} resources\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'runResourceFunctions',\n\t    value: function runResourceFunctions(resources) {\n\t      var _this5 = this;\n\t\n\t      Object.keys(resources).forEach(function (key) {\n\t        var resource = resources[key];\n\t        if (resource.type === 'js' && typeof window.its123[resource.func] === 'function') {\n\t          // Give context as variable\n\t          window.its123[resource.func](_this5.api);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Request a report by its access code\n\t     * @param  {String} accessCode access code for the report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestReport',\n\t    value: function requestReport(accessCode) {\n\t      var _ref6 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var _ref6$metaData = _ref6.metaData;\n\t      var metaData = _ref6$metaData === undefined ? '' : _ref6$metaData;\n\t      var _ref6$metaHmac = _ref6.metaHmac;\n\t      var metaHmac = _ref6$metaHmac === undefined ? '' : _ref6$metaHmac;\n\t\n\t      var url = void 0;\n\t      if (metaData.length <= 0 || metaHmac.length <= 0) {\n\t        url = this.api.endpoint + '/report/' + accessCode;\n\t      } else {\n\t        url = this.api.endpoint + '/report/' + accessCode + '?meta=' + metaData + '&meta_hmac=' + metaHmac;\n\t      }\n\t\n\t      return (0, _request2['default'])(url, {\n\t        headers: {\n\t          'X-123test-ApiKey': this.api.apiKey\n\t        },\n\t        method: 'GET',\n\t        mode: 'cors'\n\t      }).then(function (response) {\n\t        return response.text();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Store a product in the local storage\n\t     * @param  {String} productId Id of the product\n\t     * @param  {object} product   Product information\n\t     * @param  {String} user      User UUID\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'storeInStorage',\n\t    value: function storeInStorage(productId, product, user) {\n\t      // Add new record\n\t      var productData = _extends({}, product, {\n\t        user: user,\n\t        started: Date.now()\n\t      });\n\t\n\t      (0, _storage.saveToStorage)('its123Api-' + productId, JSON.stringify(productData));\n\t    }\n\t\n\t    /**\n\t     * Load a product from the storage\n\t     *\n\t     * Returns a promise that resolves when a local storage item has been found.\n\t     * @param  {String} productId             Product id\n\t     * @param  {String} [user='']             User UUID\n\t     * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadFromStorage',\n\t    value: function loadFromStorage(productId) {\n\t      var user = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t      var expirationTime = arguments.length <= 2 || arguments[2] === undefined ? 3600 : arguments[2];\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var item = (0, _storage.getFromStorage)('its123Api-' + productId);\n\t\n\t        // Check browser support and presence of object\n\t        if (!item) {\n\t          reject('No storage present');\n\t        }\n\t\n\t        var product = JSON.parse(item);\n\t\n\t        if (product && product.started + expirationTime * 1000 > Date.now() && product.user === user) {\n\t          console.info('Loading instrument from local storage.');\n\t          resolve(product);\n\t        }\n\t\n\t        reject('No product in local store');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Clear the local storage of all items associatd with a product id\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearStorage',\n\t    value: function clearStorage(productId) {\n\t      var productJson = (0, _storage.getFromStorage)('its123Api-' + productId);\n\t\n\t      if (!productJson) {\n\t        return;\n\t      }\n\t\n\t      var product = JSON.parse(productJson);\n\t      product.slots.instruments.forEach(function (i) {\n\t        (0, _storage.removeFromStorage)('its123Api-' + i.access_code);\n\t        (0, _storage.removeFromStorageByPrefix)(i.access_code);\n\t      });\n\t      (0, _storage.removeFromStorage)('its123Api-' + productId);\n\t    }\n\t\n\t    /**\n\t     * Set the current state of an instrument in storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @param  {String} status     Status indicator\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'updateInstrumentInStorage',\n\t    value: function updateInstrumentInStorage(accessCode, status) {\n\t      (0, _storage.saveToStorage)('its123Api-' + accessCode, status);\n\t    }\n\t\n\t    /**\n\t     * Get status of an instrument from storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @return {String|null} Status\n\t     */\n\t\n\t  }, {\n\t    key: 'getInstrumentStatusFromStorage',\n\t    value: function getInstrumentStatusFromStorage(accessCode) {\n\t      return (0, _storage.getFromStorage)('its123Api-' + accessCode);\n\t    }\n\t\n\t    /**\n\t     * Log an exception and retrow\n\t     * @param  {Object} e The error\n\t     * @return null\n\t     */\n\t\n\t  }, {\n\t    key: 'handleException',\n\t    value: function handleException(e) {\n\t      if (this.api.logErrors) {\n\t        switch (e.status) {\n\t          case 401:\n\t          case 403:\n\t            console.error('123test API Permission error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          case 404:\n\t            console.error('123test API Product error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          case 408:\n\t            console.error('123test API Server error: API is unavailable');\n\t            this.triggerEvent('api-unavailable', e, 'error');\n\t            break;\n\t          case 500:\n\t            console.error('123test API Server error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          default:\n\t            // Unknown error\n\t            throw e;\n\t        }\n\t      }\n\t\n\t      // Trigger that a unhandled exception has occurred\n\t      this.triggerEvent('error', e, 'error');\n\t    }\n\t\n\t    /**\n\t     * Utility function to get the url to a PDF report for a given product object\n\t     * @param  {Object} product               The product that contains the report list\n\t     * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n\t     * @return {String}                       Url to the report\n\t     */\n\t\n\t  }, {\n\t    key: 'getPdfUrl',\n\t    value: function getPdfUrl(product) {\n\t      var typeName = arguments.length <= 1 || arguments[1] === undefined ? 'standard' : arguments[1];\n\t\n\t      // Get correct type id for premium or standard pdf\n\t      var type = typeName === 'premium' ? 221 : 121;\n\t      var report = product.reports.find(function (r) {\n\t        return r.type === type;\n\t      });\n\t\n\t      if (!report) {\n\t        throw new Error('No access code for pdf is present in product object.');\n\t      }\n\t\n\t      return this.api.endpoint + '/report/' + report.access_code;\n\t    }\n\t\n\t    /**\n\t     * Send a new event to the listeners\n\t     * @param  {String} eventName Name of the event\n\t     * @param  {Object} data      Optional event data\n\t     * @param  {String} type      Event type\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'triggerEvent',\n\t    value: function triggerEvent(eventName, data) {\n\t      var type = arguments.length <= 2 || arguments[2] === undefined ? 'info' : arguments[2];\n\t\n\t      var listeners = this.eventListeners[eventName];\n\t\n\t      if (listeners && listeners.length > 0) {\n\t        listeners.forEach(function (l) {\n\t          return l(data);\n\t        });\n\t      }\n\t\n\t      if (this.api.environment === 'development') {\n\t        switch (type) {\n\t          case 'error':\n\t            console.error('Event triggered: ' + eventName);\n\t            break;\n\t          case 'info':\n\t          default:\n\t            console.info('Event triggered: ' + eventName);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register a new event listener\n\t     * @param  {String|Array}   eventName Name of the event\n\t     * @param  {Function} callback\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(eventName, callback) {\n\t      var _this6 = this;\n\t\n\t      var events = [];\n\t\n\t      if (Array.isArray(eventName)) {\n\t        events = eventName;\n\t      } else {\n\t        events.push(eventName);\n\t      }\n\t\n\t      events.forEach(function (event) {\n\t        if (!_this6.eventListeners[event]) {\n\t          _this6.eventListeners[event] = [];\n\t        }\n\t\n\t        _this6.eventListeners[event].push(callback);\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Its123;\n\t}();\n\t\n\texports['default'] = Its123;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports['default'] = request;\n\t\n\tvar _promise = __webpack_require__(3);\n\t\n\t/**\n\t * Checks if a network request came back fine, and throws an error if not\n\t *\n\t * @param  {object} response   A response from a network request\n\t *\n\t * @return {object|undefined} Returns either the response, or throws an error\n\t */\n\tfunction checkStatus(response) {\n\t  if (response.status >= 200 && response.status < 300) {\n\t    return response;\n\t  }\n\t\n\t  var error = new Error(response.statusText);\n\t  error.response = response;\n\t  error.status = response.status;\n\t\n\t  throw error;\n\t}\n\t\n\t/**\n\t * Requests a URL, returning a promise\n\t *\n\t * @param  {string} url       The URL we want to request\n\t * @param  {object} [options] The options we want to pass to \"fetch\"\n\t * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n\t * @return {object}           The response data\n\t */\n\tfunction request(url) {\n\t  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t  var timeout = arguments.length <= 2 || arguments[2] === undefined ? 8000 : arguments[2];\n\t\n\t  return (0, _promise.timeoutPromise)(timeout, fetch(url, options).then(checkStatus));\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.timeoutPromise = timeoutPromise;\n\texports.tryAtMost = tryAtMost;\n\t/**\n\t * Promise with timeout function\n\t * @param  {Number} ms      Miliseconds to wait before promise is rejected\n\t * @param  {Promise} promise The promise to run\n\t * @return {Promise}         Promise with timeout\n\t */\n\tfunction timeoutPromise(ms, promise) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Create timer that rejects promise after ms miliseconds\n\t    var timeoutId = setTimeout(function () {\n\t      var error = new Error('timeout');\n\t      error.status = 408;\n\t      reject(error);\n\t    }, ms);\n\t\n\t    // Clear timeout if promise resolves/rejects on its own\n\t    promise.then(function (res) {\n\t      clearTimeout(timeoutId);\n\t      resolve(res);\n\t    }, function (err) {\n\t      clearTimeout(timeoutId);\n\t      reject(err);\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * Decorates a promis-creating function with a retry functionality (by recursion)\n\t * @param  {Number}   maxRetries  Max number of retries\n\t * @param  {Number}   timeout     Miliseconds to wait\n\t * @param  {Function} fn          Function that creates and returns a promise\n\t * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n\t * @param  {Number}   [current=0] Current iteration in the retry loop\n\t * @return {Promise}\n\t */\n\tfunction tryAtMost(maxRetries, timeout, fn) {\n\t  var timeoutFactor = arguments.length <= 3 || arguments[3] === undefined ? 4 : arguments[3];\n\t  var current = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    return fn().then(resolve)['catch'](function (error) {\n\t      if (current < maxRetries) {\n\t        setTimeout(function () {\n\t          return resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1));\n\t        }, timeout);\n\t      } else {\n\t        reject(error);\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.saveToStorage = saveToStorage;\n\texports.getFromStorage = getFromStorage;\n\texports.removeFromStorage = removeFromStorage;\n\texports.removeFromStorageByPrefix = removeFromStorageByPrefix;\n\t// Bind store\n\tvar store = window.localStorage;\n\t\n\t// Test local storage support\n\t// Adapted from https://github.com/Modernizr/Modernizr\n\tvar storeAvailable = function () {\n\t  var testItem = 'test';\n\t  try {\n\t    store.setItem(testItem, testItem);\n\t    store.removeItem(testItem);\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}();\n\t\n\t/**\n\t * Save an item to storage\n\t * @param  {String} id   identifier\n\t * @param  {mixed} item Value to store\n\t * @return {null}\n\t */\n\tfunction saveToStorage(id, item) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  store.setItem(id, item);\n\t}\n\t\n\t/**\n\t * Retrieve an item from storage\n\t * @param  {String} id Storage identifier\n\t * @return {mixed}    The value\n\t */\n\tfunction getFromStorage(id) {\n\t  if (!storeAvailable) {\n\t    return null;\n\t  }\n\t\n\t  return store.getItem(id);\n\t}\n\t\n\t/**\n\t * Remove item from storage\n\t * @param  {String} id Storage identifier\n\t * @return {null}\n\t */\n\tfunction removeFromStorage(id) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  store.removeItem(id);\n\t}\n\t\n\t/**\n\t * Remove all local storage elements that start with a given prefix\n\t * @param  {String} prefix Prefix to search for\n\t * @return {null}\n\t */\n\tfunction removeFromStorageByPrefix(prefix) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  for (var i = store.length - 1; i >= 0; i--) {\n\t    if (store.key(i).startsWith(prefix)) {\n\t      store.removeItem(store.key(i));\n\t    }\n\t  }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** its123api.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0f06f0c3a423a6775b89\n **/","import Its123 from './Api/Its123';\n\n// Bind Its123 to the global window\nwindow.Its123 = Its123;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/*\n * 123Test Api v2\n *\n * @author Wouter Bulten <github.com/wouterbulten>\n * @author Theo den Hollander <github.com/theodenhollander>\n * @license\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 123test\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport request from '../util/request';\n\nimport { tryAtMost } from '../util/promise';\n\nimport {\n  saveToStorage,\n  getFromStorage,\n  removeFromStorage,\n  removeFromStorageByPrefix,\n} from '../util/storage';\n\n/**\n * Default configuration for api, can be overriden by user\n * @type {Object}\n */\nconst defaultApiConfig = {\n  // Domain config\n  domain: 'https://api.123test.com',\n  version: 'v2',\n\n  // Environment config\n  logErrors: true,\n  environment: 'production',\n\n  // DOM config\n  elements: {\n    instrumentFormSelector: 'form.its123-instrument',\n    loadingElementId: 'its123api-loading',\n    productElementId: 'its123api-product',\n    reportElementId: 'its123api-report',\n    loadingElement: null,\n    productElement: null,\n    reportElement: null,\n  },\n\n  // Number of retries some fetch request may make\n  maxRetries: 2,\n  // Initial delay before a retry\n  retryDelay: 5000,\n\n  apiKey: 'not-set',\n};\n\n/**\n * Main API class\n */\nclass Its123 {\n\n  /**\n   * Create new Api object\n   * @param  {Object} [apiConfig={}] Api configuration\n   * @return {void}\n   */\n  constructor(apiConfig = {}) {\n    // Set api config to default and override with parameters\n    this.api = {\n      ...defaultApiConfig,\n      ...apiConfig,\n    };\n    // Construct correct api end point\n    this.api.endpoint = `${this.api.domain}/${this.api.version}`;\n    // Set env based on domain\n    this.api.environment =\n      (this.api.domain === 'https://api.123test.dev') ? 'development' : 'production';\n\n    // Check for valid api key\n    if (this.api.apiKey === 'not-set') {\n      throw new Error(\n        'Api key must be set when initalising Its123 object. Please check your api config.'\n      );\n    }\n\n    // Query the DOM and set options\n    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n    if (!this.api.elements.loadingElement\n      || !this.api.elements.productElement || !this.api.elements.reportElement) {\n      throw new Error(\n        'Element for loading, product or report not found. Please check your HTML and Api config.'\n      );\n    }\n\n    // Placeholder for eventlisteners\n    this.eventListeners = {};\n  }\n\n  /**\n   * Load a product\n   *\n   * Runs all the required sub steps from instrument to report. All promises are chained\n   * and the final promise returns the product data when resolved.\n   *\n   * Will automatically render the first report that is available. Set `renderReport` to false\n   * to counter this behaviour.\n   *\n   * Data structure of the product object:\n   *\n   * product = {\n   *  slots: {\n   *    instruments: [],\n   *    respondent: {},\n   *  },\n   *  reports: [],\n   *  access_code: null,\n   * };\n   *\n   * @param  {String} productId product to load\n   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n   *                                       report render functions\n   * @param  {Boolean} [storage=true]      Set to true to try loading product data\n   *                                       from local storage.\n   * @param  {String}  [user=''] Optional user UUID\n   * @return {Promise}\n   */\n  loadProduct(productId, { renderReport = true, storage = true, user = '' } = {}) {\n    let product = {};\n    let promise;\n\n    // Show loading div\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'block';\n\n    if (storage) {\n      // Try to load product information from local storage, if it fails\n      // fall back to a API request\n      promise = this.loadFromStorage(productId, user)\n        .catch(() => this.requestProduct(productId, user)\n          // Store the requested product in the local store for future requests\n          .then((p) => {\n            this.storeInStorage(productId, p, user);\n            return p;\n          })\n        );\n    } else {\n      promise = this.requestProduct(productId, user);\n    }\n\n    promise = promise.then((p) => {\n      product = p;\n      let instruments = product.slots.instruments;\n      this.triggerEvent('instruments-loaded', instruments);\n\n      if (storage) {\n        // Filter any instruments that already have been completed\n        // Prevents unnecessary requests to the API\n        instruments = instruments.filter((i => {\n          const status = this.getInstrumentStatusFromStorage(i.access_code);\n\n          switch (status) {\n            case 'ended-items':\n            case 'ended-skipped':\n            case 'ended-time':\n              this.triggerEvent('instrument-already-completed',\n                { accessCode: i.access_code, status });\n              return false;\n            case 'in-progress':\n              this.triggerEvent('instrument-continue',\n                { accessCode: i.access_code, status });\n              return true;\n            case 'started':\n            default:\n              return true;\n          }\n        }));\n      }\n\n      // Run all instruments in series\n      // 'reduce' is used as a special construct to map a list of instruments\n      // to a chain of promises that resolve in series. The chain is fired by\n      // setting a 'Promise.resolve()' as the initial value.\n      return instruments.reduce((previousStep, { access_code: accessCode }) => (\n        previousStep\n          .then(() => this.requestInstrument(accessCode))\n          .then((result) => {\n            this.triggerEvent('instrument-started', { accessCode, status: result.status });\n            return this.processApiInstrumentResponse(accessCode, result, storage);\n          })\n      ), Promise.resolve());\n    });\n\n    if (renderReport) {\n      // All instruments have been completed, render report\n      promise = promise.then(() => this.loadReport(product.reports[0].access_code));\n    }\n\n    // Return initial promise and make sure that returning the product is the last step in the chain\n    return promise\n      // Remove this session from the local storage\n      .then(() => this.clearStorage(productId))\n      // Trigger event and pass product info\n      .then(() => this.triggerEvent('product-completed', product))\n      .then(() => product)\n      // Also add a catch, this removes the need of having individual catches for every fetch\n      .catch((e) => {\n        if (storage) {\n          // Something could be wrong with our local store,\n          // clear it to prevent any future errors\n          this.clearStorage(productId);\n        }\n        return this.handleException(e);\n      });\n  }\n\n  /**\n  /**\n   * Load an render a report by its access code\n   * @param  {String} accessCode Access code for report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  loadReport(accessCode, { metaData, metaHmac } = {}) {\n    return this.requestReport(accessCode, { metaData, metaHmac })\n      .then((body) => this.renderReport(body))\n      .then(() => this.triggerEvent('report-ready'));\n  }\n\n  /**\n   * Process a single API response from an instrument call\n   *\n   * When the instrument is still running the function will return a new Promise\n   * that waits for a form submit.\n   *\n   * @param  {String} accessCode Access code for this instrument\n   * @param  {String} status     Current instrument status\n   * @param  {Array} resources  Resources to load\n   * @param  {String} body       Html to put in the DOM\n   * @param  {Boolean} storage   Whether to load instrument input data from local storage\n   * @return {Promise}\n   */\n  processApiInstrumentResponse(accessCode, { status, resources, body }, storage) {\n    let promise;\n\n    switch (status) {\n      case 'started':\n      case 'in-progress':\n        this.updateInstrumentInStorage(accessCode, status);\n\n        promise = this.loadResources(resources)\n          .then(() => this.renderInstrument(body));\n\n        // Try to load item data from local storage when enabled\n        if (storage) {\n          promise = promise.then(() => this.loadInstrumentStateFromStorage(accessCode))\n          .then(() => this.bindInstrumentStorageListeners(accessCode));\n        }\n\n        return promise.then(() => this.runResourceFunctions(resources))\n          .then(() => this.waitForInstrumentToSubmit())\n          .then(({ form }) =>\n            tryAtMost(this.api.maxRetries, this.api.retryDelay, () =>\n             this.submitInstrumentData(accessCode, form))\n          )\n          // Run function again until instrument has ended\n          .then((result) => this.processApiInstrumentResponse(accessCode, result));\n      case 'ended-items':\n      case 'ended-skipped':\n      case 'ended-time':\n        this.updateInstrumentInStorage(accessCode, status);\n        this.triggerEvent('instrument-completed', { accessCode, status });\n        return Promise.resolve();\n      default:\n        throw new Error(`Unexpected instrument status ${status}`);\n    }\n  }\n\n  /**\n   * (Async) Request a product from the api\n   *\n   * Promise returns an object contains all the instruments\n   * @param  {String} productId      ID of the product\n   * @param  {String} user UUID v4\n   * @return {Promise}\n   */\n  requestProduct(productId, user) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n      'X-123test-ProductId': productId,\n    };\n\n    if (user && user.length === 36) {\n      headers['X-123test-Respondent'] = user;\n    }\n\n    return request(`${this.api.endpoint}/product/request-product`, {\n      method: 'GET',\n      mode: 'cors',\n      headers,\n    })\n    .then((response) => response.json())\n    .then((json) => ({\n      slots: json.slots,\n      reports: json.reports,\n      product_access_code: json.product_access_code,\n    }))\n    .catch(error => {\n      switch (error.status) {\n        case 401:\n          this.triggerEvent('invalid-api-key', error.response, 'error');\n          break;\n        case 403:\n          this.triggerEvent('product-no-access', error.response, 'error');\n          break;\n        default:\n          // Do nothing\n      }\n\n      throw error;\n    });\n  }\n\n  /**\n   * Get information about a specific product running\n   * @param  {String} accessCode Access code for product run\n   * @return {Promise}\n   */\n  requestProductInfo(accessCode) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n    };\n\n    return request(`${this.api.endpoint}/product/${accessCode}/overview`, {\n      method: 'GET',\n      mode: 'cors',\n      headers,\n    })\n    .then((response) => response.json())\n    .then((json) => ({\n      slots: json.slots,\n      reports: json.reports,\n      product_access_code: json.product_access_code,\n    }));\n  }\n\n  /**\n   * (Async) Request an instrument from the api\n   *\n   * Promise returns body and resources that need to be loaded\n   * @param  {String} accessCode Access code for the instrument\n   * @return {Promise}\n   */\n  requestInstrument(accessCode) {\n    return request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    })\n    // reponse.text() returns a Promise so we add an extra closure here\n    // to also access the resource variable itself\n    .then((response) => response.text()\n      .then((body) => ({\n        body,\n        status: response.headers.get('X-123test-InstrumentStatus'),\n        resources: JSON.parse(response.headers.get('X-123test-Resources')),\n      }))\n    );\n  }\n\n  /**\n   * Attach a listener to the instrument, makes use of a promise that resolves\n   * when the button is clicked.\n   * @return {Promise}\n   */\n  waitForInstrumentToSubmit() {\n    const form = document.querySelector(this.api.elements.instrumentFormSelector);\n\n    // Return a new promise that resolves when the submit button is clicked\n    return new Promise((resolve) => {\n      form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        // Disable all buttons in the form\n        const buttons = event.target.getElementsByTagName('button');\n        for (let b = 0; b < buttons.length; b++) {\n          buttons[b].disabled = true;\n        }\n        resolve({ form, event });\n      });\n    });\n  }\n\n  /**\n   * Submit a form to the API for a given instrument\n   * @param  {String} accessCode Access code of the instrument\n   * @param  {Object} form       HTML Form\n   * @return {Promise}\n   */\n  submitInstrumentData(accessCode, form) {\n    return request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'POST',\n      cache: 'no-cache',\n      body: new FormData(form),\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    })\n    .then((response) => response.text()\n      .then((body) => ({\n        body,\n        status: response.headers.get('X-123test-InstrumentStatus'),\n        resources: JSON.parse(response.headers.get('X-123test-Resources')),\n      }))\n    );\n  }\n\n  /**\n   * Output an instrument to the DOM\n   * @param  {String} body Instrument HTML\n   * @return {void}\n   */\n  renderInstrument(body) {\n    this.api.elements.productElement.innerHTML = body;\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.productElement.style.display = 'initial';\n  }\n\n  /**\n   * Add event listeners to radio buttons in instruments\n   * @param  {String} accessCode Access code of the instrument\n   * @return {null}\n   */\n  bindInstrumentStorageListeners(accessCode) {\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    for (let e = 0; e < elements.length; e++) {\n      const input = elements[e];\n\n      if (input.type === 'radio') {\n        input.addEventListener('change', () => {\n          saveToStorage(`${accessCode}-${input.name}`, input.value);\n        });\n      }\n    }\n  }\n\n  /**\n   * Apply stored instrument state to the DOM\n   * @param  {String} accessCode Access code of instrument\n   * @return {null}\n   */\n  loadInstrumentStateFromStorage(accessCode) {\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    let loaded = false;\n    for (let e = 0; e < elements.length; e++) {\n      const input = elements[e];\n      const value = getFromStorage(`${accessCode}-${input.name}`);\n\n      if (value !== null && input.type === 'radio' && input.value === value) {\n        input.checked = true;\n        loaded = true;\n      }\n    }\n\n    if (loaded) {\n      this.triggerEvent('instrument-item-data-loaded', { access_code: accessCode });\n    }\n  }\n\n  /**\n   * Render a report to the DOM\n   *\n   * @param  {String} body report body\n   * @return {Promise}\n   */\n  renderReport(body) {\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.reportElement.innerHTML = body;\n    this.api.elements.reportElement.style.display = 'initial';\n  }\n\n  /**\n   * Add new resources to the DOM\n   *\n   * Returns a new Promise that resolves when all critical assets have been loaded\n   * @param  {Object} resources The resources to load\n   * @return {void}\n   */\n  loadResources(resources) {\n    // Map each resource to a new Promise\n    // JS resources resolve when loaded\n    return Promise.all(Object.keys(resources).map((key) => (\n      new Promise((resolve, reject) => {\n        const resourceItem = resources[key];\n        const head = document.getElementsByTagName('head')[0];\n\n        // Do not load resources that are already present\n        if (document.querySelectorAll(`script[src=\"${resourceItem.path}\"]`).length > 0) {\n          resolve();\n          return;\n        }\n        switch (resourceItem.type) {\n          case 'js': {\n            const script = document.createElement('script');\n            script.src = resourceItem.path;\n            // Allow some files to not load asynchronous\n            script.async = resourceItem.async || false;\n            // Resolve when loaded\n            script.onload = resolve;\n            // Append to the head of the page\n            head.appendChild(script);\n          }\n            break;\n          case 'css': {\n            const cssLink = document.createElement('link');\n            cssLink.rel = 'stylesheet';\n            cssLink.type = 'text/css';\n            cssLink.media = 'all';\n            cssLink.href = resourceItem.path;\n            // Append to the head of the page\n            head.appendChild(cssLink);\n\n            // Directy resolve css, not critical\n            resolve();\n          }\n            break;\n          default:\n            reject(`Unknown resource type ${resourceItem.type}`);\n        }\n      })\n    )));\n  }\n\n  /**\n   * Run functions for a list of JS resources\n   * @param  {Object} resources\n   * @return {void}\n   */\n  runResourceFunctions(resources) {\n    Object.keys(resources).forEach((key) => {\n      const resource = resources[key];\n      if (resource.type === 'js'\n        && typeof window.its123[resource.func] === 'function') {\n        // Give context as variable\n        window.its123[resource.func](this.api);\n      }\n    });\n  }\n\n  /**\n   * Request a report by its access code\n   * @param  {String} accessCode access code for the report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  requestReport(accessCode, { metaData = '', metaHmac = '' } = {}) {\n    let url;\n    if (metaData.length <= 0 || metaHmac.length <= 0) {\n      url = `${this.api.endpoint}/report/${accessCode}`;\n    } else {\n      url = `${this.api.endpoint}/report/${accessCode}?meta=${metaData}&meta_hmac=${metaHmac}`;\n    }\n\n    return request(url, {\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n      },\n      method: 'GET',\n      mode: 'cors',\n    })\n      .then((response) => response.text());\n  }\n\n  /**\n   * Store a product in the local storage\n   * @param  {String} productId Id of the product\n   * @param  {object} product   Product information\n   * @param  {String} user      User UUID\n   * @return {void}\n   */\n  storeInStorage(productId, product, user) {\n    // Add new record\n    const productData = {\n      ...product,\n      user,\n      started: Date.now(),\n    };\n\n    saveToStorage(`its123Api-${productId}`, JSON.stringify(productData));\n  }\n\n  /**\n   * Load a product from the storage\n   *\n   * Returns a promise that resolves when a local storage item has been found.\n   * @param  {String} productId             Product id\n   * @param  {String} [user='']             User UUID\n   * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n   * @return {Promise}\n   */\n  loadFromStorage(productId, user = '', expirationTime = 3600) {\n    return new Promise((resolve, reject) => {\n      const item = getFromStorage(`its123Api-${productId}`);\n\n      // Check browser support and presence of object\n      if (!item) {\n        reject('No storage present');\n      }\n\n      const product = JSON.parse(item);\n\n      if (product && (product.started + (expirationTime * 1000)) > Date.now()\n        && product.user === user) {\n        console.info('Loading instrument from local storage.');\n        resolve(product);\n      }\n\n      reject('No product in local store');\n    });\n  }\n\n  /**\n   * Clear the local storage of all items associatd with a product id\n   * @return {void}\n   */\n  clearStorage(productId) {\n    const productJson = getFromStorage(`its123Api-${productId}`);\n\n    if (!productJson) {\n      return;\n    }\n\n    const product = JSON.parse(productJson);\n    product.slots.instruments.forEach(i => {\n      removeFromStorage(`its123Api-${i.access_code}`);\n      removeFromStorageByPrefix(i.access_code);\n    });\n    removeFromStorage(`its123Api-${productId}`);\n  }\n\n  /**\n   * Set the current state of an instrument in storage\n   * @param  {String} accessCode Access code for instrument\n   * @param  {String} status     Status indicator\n   * @return {void}\n   */\n  updateInstrumentInStorage(accessCode, status) {\n    saveToStorage(`its123Api-${accessCode}`, status);\n  }\n\n  /**\n   * Get status of an instrument from storage\n   * @param  {String} accessCode Access code for instrument\n   * @return {String|null} Status\n   */\n  getInstrumentStatusFromStorage(accessCode) {\n    return getFromStorage(`its123Api-${accessCode}`);\n  }\n\n  /**\n   * Log an exception and retrow\n   * @param  {Object} e The error\n   * @return null\n   */\n  handleException(e) {\n    if (this.api.logErrors) {\n      switch (e.status) {\n        case 401:\n        case 403:\n          console.error(`123test API Permission error: ${e.message} (${e.status})`);\n          break;\n        case 404:\n          console.error(`123test API Product error: ${e.message} (${e.status})`);\n          break;\n        case 408:\n          console.error('123test API Server error: API is unavailable');\n          this.triggerEvent('api-unavailable', e, 'error');\n          break;\n        case 500:\n          console.error(`123test API Server error: ${e.message} (${e.status})`);\n          break;\n        default:\n          // Unknown error\n          throw e;\n      }\n    }\n\n    // Trigger that a unhandled exception has occurred\n    this.triggerEvent('error', e, 'error');\n  }\n\n  /**\n   * Utility function to get the url to a PDF report for a given product object\n   * @param  {Object} product               The product that contains the report list\n   * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n   * @return {String}                       Url to the report\n   */\n  getPdfUrl(product, typeName = 'standard') {\n    // Get correct type id for premium or standard pdf\n    const type = (typeName === 'premium') ? 221 : 121;\n    const report = product.reports.find((r) => r.type === type);\n\n    if (!report) {\n      throw new Error('No access code for pdf is present in product object.');\n    }\n\n    return `${this.api.endpoint}/report/${report.access_code}`;\n  }\n\n  /**\n   * Send a new event to the listeners\n   * @param  {String} eventName Name of the event\n   * @param  {Object} data      Optional event data\n   * @param  {String} type      Event type\n   * @return {void}\n   */\n  triggerEvent(eventName, data, type = 'info') {\n    const listeners = this.eventListeners[eventName];\n\n    if (listeners && listeners.length > 0) {\n      listeners.forEach((l) => l(data));\n    }\n\n    if (this.api.environment === 'development') {\n      switch (type) {\n        case 'error':\n          console.error(`Event triggered: ${eventName}`);\n          break;\n        case 'info':\n        default:\n          console.info(`Event triggered: ${eventName}`);\n      }\n    }\n  }\n\n  /**\n   * Register a new event listener\n   * @param  {String|Array}   eventName Name of the event\n   * @param  {Function} callback\n   * @return {void}\n   */\n  on(eventName, callback) {\n    let events = [];\n\n    if (Array.isArray(eventName)) {\n      events = eventName;\n    } else {\n      events.push(eventName);\n    }\n\n    events.forEach(event => {\n      if (!this.eventListeners[event]) {\n        this.eventListeners[event] = [];\n      }\n\n      this.eventListeners[event].push(callback);\n    });\n  }\n}\n\nexport default Its123;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Api/Its123.js\n **/","import { timeoutPromise } from './promise';\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  error.status = response.status;\n\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n * @return {object}           The response data\n */\nexport default function request(url, options = {}, timeout = 8000) {\n  return timeoutPromise(timeout, fetch(url, options)\n    .then(checkStatus));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/request.js\n **/","/**\n * Promise with timeout function\n * @param  {Number} ms      Miliseconds to wait before promise is rejected\n * @param  {Promise} promise The promise to run\n * @return {Promise}         Promise with timeout\n */\nexport function timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    // Create timer that rejects promise after ms miliseconds\n    const timeoutId = setTimeout(() => {\n      const error = new Error('timeout');\n      error.status = 408;\n      reject(error);\n    }, ms);\n\n    // Clear timeout if promise resolves/rejects on its own\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  });\n}\n\n/**\n * Decorates a promis-creating function with a retry functionality (by recursion)\n * @param  {Number}   maxRetries  Max number of retries\n * @param  {Number}   timeout     Miliseconds to wait\n * @param  {Function} fn          Function that creates and returns a promise\n * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n * @param  {Number}   [current=0] Current iteration in the retry loop\n * @return {Promise}\n */\nexport function tryAtMost(maxRetries, timeout, fn, timeoutFactor = 4, current = 0) {\n  return new Promise((resolve, reject) => fn()\n    .then(resolve)\n    .catch(error => {\n      if (current < maxRetries) {\n        setTimeout(() =>\n          resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1)),\n          timeout\n        );\n      } else {\n        reject(error);\n      }\n    })\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/promise.js\n **/","// Bind store\nconst store = window.localStorage;\n\n// Test local storage support\n// Adapted from https://github.com/Modernizr/Modernizr\nconst storeAvailable = (() => {\n  const testItem = 'test';\n  try {\n    store.setItem(testItem, testItem);\n    store.removeItem(testItem);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * Save an item to storage\n * @param  {String} id   identifier\n * @param  {mixed} item Value to store\n * @return {null}\n */\nexport function saveToStorage(id, item) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  store.setItem(id, item);\n}\n\n/**\n * Retrieve an item from storage\n * @param  {String} id Storage identifier\n * @return {mixed}    The value\n */\nexport function getFromStorage(id) {\n  if (!storeAvailable) {\n    return null;\n  }\n\n  return store.getItem(id);\n}\n\n/**\n * Remove item from storage\n * @param  {String} id Storage identifier\n * @return {null}\n */\nexport function removeFromStorage(id) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  store.removeItem(id);\n}\n\n/**\n * Remove all local storage elements that start with a given prefix\n * @param  {String} prefix Prefix to search for\n * @return {null}\n */\nexport function removeFromStorageByPrefix(prefix) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  for (let i = store.length - 1; i >= 0; i--) {\n    if (store.key(i).startsWith(prefix)) {\n      store.removeItem(store.key(i));\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/storage.js\n **/"],"sourceRoot":""}