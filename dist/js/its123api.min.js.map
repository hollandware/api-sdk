{"version":3,"sources":["webpack:///its123api.min.js","webpack:///webpack/bootstrap 7650321b3ed1b6298d5c?9981","webpack:///./src/main.js","webpack:///./src/util/promise.js?f80b","webpack:///./src/Api/Its123.js?eeca","webpack:///./src/util/request.js?0ff7","webpack:///./src/util/storage.js?75dd","webpack:///./~/process/browser.js?82e4","webpack:///./~/regenerator-runtime/runtime.js?1aab"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_Its","_Its2","window","Its123","17","timeoutPromise","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","error","Error","status","then","res","clearTimeout","err","tryAtMost","maxRetries","timeout","fn","timeoutFactor","arguments","length","undefined","current","retryUntilResolved","Object","defineProperty","value","28","_asyncToGenerator","gen","apply","this","step","key","arg","info","done","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_request","_request2","_promise","_storage","defaultApiConfig","domain","version","logErrors","environment","elements","instrumentFormSelector","loadingElementId","productElementId","reportElementId","loadingElement","productElement","reportElement","retryDelay","apiKey","apiConfig","api","endpoint","document","getElementById","eventListeners","loadProduct","_x2","_x3","_ref","regeneratorRuntime","mark","_callee","productId","product","instruments","accessCode","result","_this","_ref2","_ref2$renderReport","renderReport","_ref2$storage","storage","_ref2$user","user","wrap","_context","prev","next","style","display","loadFromStorage","sent","t0","requestProduct","storeInStorage","slots","triggerEvent","filter","getInstrumentStatusFromStorage","access_code","requestInstrument","processApiInstrumentResponse","loadReport","reports","clearStorage","abrupt","stop","_x5","_x6","_ref3","_callee2","body","_ref4","metaData","metaHmac","_context2","requestReport","_x8","_x9","_x10","_ref5","_callee4","_ref6","_loop","_ret","_this2","resources","_context4","updateInstrumentInStorage","loadResources","renderInstrument","loadInstrumentStateFromStorage","bindInstrumentStorageListeners","runResourceFunctions","_callee3","form","_context3","waitForInstrumentToSubmit","submitInstrumentData","v","t1","delegateYield","_x11","_x12","_ref7","_callee5","headers","response","json","_context5","Content-Type","X-123test-ApiKey","X-123test-ProductId","method","mode","product_access_code","requestProductInfo","_x13","_ref8","_callee6","_context6","_x14","_ref9","_callee7","_context7","cache","X-123test-InstrumentRun","text","get","JSON","parse","className","loadingIcon","querySelector","button","classList","contains","disabled","innerHTML","getAttribute","innerText","remove","addEventListener","event","preventDefault","add","setAttribute","_x15","_x16","_ref10","_callee8","_context8","FormData","getElementsByTagName","_loop2","e","input","type","saveToStorage","name","getFromStorage","checked","_this3","keys","forEach","resource","its123","func","_ref11","_ref11$metaData","_ref11$metaHmac","url","productData","started","Date","now","stringify","expirationTime","item","console","productJson","removeFromStorage","removeFromStorageByPrefix","message","typeName","report","find","r","eventName","data","listeners","l","callback","_this4","events","Array","isArray","push","all","map","resourceItem","head","querySelectorAll","path","script","createElement","src","async","onload","appendChild","cssLink","rel","media","href","29","checkStatus","statusText","request","options","fetch","30","storeAvailable","store","setItem","getItem","removeItem","prefix","startsWith","localStorage","testItem","43","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","array","noop","process","nextTick","args","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","44","global","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","record","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","bind","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","returnMethod","GenStateSuspendedYield","resultName","nextLoc","_sent","dispatchException","ContinueSentinel","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","$Symbol","toStringTagSymbol","toStringTag","inModule","runtime","Gp","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","iter","toString","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown"],"mappings":"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","file":"its123api.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Its = __webpack_require__(28);\n\t\n\tvar _Its2 = _interopRequireDefault(_Its);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t// Bind Its123 to the global window\n\twindow.Its123 = _Its2['default'];\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.timeoutPromise = timeoutPromise;\n\texports.tryAtMost = tryAtMost;\n\texports.retryUntilResolved = retryUntilResolved;\n\t/**\n\t * Promise with timeout function\n\t * @param  {Number} ms      Miliseconds to wait before promise is rejected\n\t * @param  {Promise} promise The promise to run\n\t * @return {Promise}         Promise with timeout\n\t */\n\tfunction timeoutPromise(ms, promise) {\n\t  return new Promise(function (resolve, reject) {\n\t    // Create timer that rejects promise after ms miliseconds\n\t    var timeoutId = setTimeout(function () {\n\t      var error = new Error('timeout');\n\t      error.status = 408;\n\t      reject(error);\n\t    }, ms);\n\t\n\t    // Clear timeout if promise resolves/rejects on its own\n\t    promise.then(function (res) {\n\t      clearTimeout(timeoutId);\n\t      resolve(res);\n\t    }, function (err) {\n\t      clearTimeout(timeoutId);\n\t      reject(err);\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * Decorates a promis-creating function with a retry functionality (by recursion)\n\t * @param  {Number}   maxRetries  Max number of retries\n\t * @param  {Number}   timeout     Miliseconds to wait\n\t * @param  {Function} fn          Function that creates and returns a promise\n\t * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n\t * @param  {Number}   [current=0] Current iteration in the retry loop\n\t * @return {Promise}\n\t */\n\tfunction tryAtMost(maxRetries, timeout, fn) {\n\t  var timeoutFactor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t  var current = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    return fn().then(resolve)['catch'](function (error) {\n\t      if (current < maxRetries) {\n\t        setTimeout(function () {\n\t          return resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1));\n\t        }, timeout);\n\t      } else {\n\t        reject(error);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction retryUntilResolved(fn) {\n\t  return new Promise(function (resolve) {\n\t    return fn().then(resolve)['catch'](function () {\n\t      return resolve(retryUntilResolved(fn));\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\test Api v2\n\tn\tauthor Wouter Bulten <github.com/wouterbulten>\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @author Theo den Hollander <github.com/theodenhollander>\n\tlicense\n\the MIT License (MIT)\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (c) 2015 123test\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\tn\tn\tn\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tn\tn\tn\tn\t\n\t__webpack_require__(44);\n\t\n\tvar _request = __webpack_require__(29);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tvar _promise = __webpack_require__(17);\n\t\n\tvar _storage = __webpack_require__(30);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Default configuration for api, can be overriden by user\n\t * @type {Object}\n\t */\n\tvar defaultApiConfig = {\n\t  // Domain config\n\t  domain: 'https://api.123test.com',\n\t  version: 'v2',\n\t\n\t  // Environment config\n\t  logErrors: true,\n\t  environment: 'production',\n\t\n\t  // DOM config\n\t  elements: {\n\t    instrumentFormSelector: 'form.its123-instrument',\n\t    loadingElementId: 'its123api-loading',\n\t    productElementId: 'its123api-product',\n\t    reportElementId: 'its123api-report',\n\t    loadingElement: null,\n\t    productElement: null,\n\t    reportElement: null\n\t  },\n\t\n\t  // Number of retries some fetch request may make\n\t  maxRetries: 2,\n\t  // Initial delay before a retry\n\t  retryDelay: 5000,\n\t\n\t  apiKey: 'not-set'\n\t};\n\t\n\t/**\n\t * Main API class\n\t */\n\t\n\tvar Its123 = function () {\n\t\n\t  /**\n\t   * Create new Api object\n\t   * @param  {Object} [apiConfig={}] Api configuration\n\t   * @return {void}\n\t   */\n\t  function Its123() {\n\t    var apiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Its123);\n\t\n\t    // Set api config to default and override with parameters\n\t    this.api = _extends({}, defaultApiConfig, apiConfig);\n\t    // Construct correct api end point\n\t    this.api.endpoint = this.api.domain + '/' + this.api.version;\n\t    // Set env based on domain\n\t    this.api.environment = this.api.domain === 'https://api.123test.dev' ? 'development' : 'production';\n\t\n\t    // Check for valid api key\n\t    if (this.api.apiKey === 'not-set') {\n\t      throw new Error('Api key must be set when initalising Its123 object. Please check your api config.');\n\t    }\n\t\n\t    // Query the DOM and set options\n\t    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n\t    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n\t    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n\t    if (!this.api.elements.loadingElement || !this.api.elements.productElement || !this.api.elements.reportElement) {\n\t      throw new Error('Element for loading, product or report not found. Please check your HTML and Api config.');\n\t    }\n\t\n\t    // Placeholder for eventlisteners\n\t    this.eventListeners = {};\n\t  }\n\t\n\t  /**\n\t   * Load a product\n\t   *\n\t   * Runs all the required sub steps from instrument to report. All promises are chained\n\t   * and the final promise returns the product data when resolved.\n\t   *\n\t   * Will automatically render the first report that is available. Set `renderReport` to false\n\t   * to counter this behaviour.\n\t   *\n\t   * Data structure of the product object:\n\t   *\n\t   * product = {\n\t   *  slots: {\n\t   *    instruments: [],\n\t   *    respondent: {},\n\t   *  },\n\t   *  reports: [],\n\t   *  access_code: null,\n\t   * };\n\t   *\n\t   * @param  {String} productId product to load\n\t   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n\t   *                                       report render functions\n\t   * @param  {Boolean} [storage=true]      Set to true to try loading product data\n\t   *                                       from local storage.\n\t   * @param  {String}  [user=''] Optional user UUID\n\t   * @return {Promise}\n\t   */\n\t\n\t\n\t  _createClass(Its123, [{\n\t    key: 'loadProduct',\n\t    value: function () {\n\t      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(productId) {\n\t        var _this = this;\n\t\n\t        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            _ref2$renderReport = _ref2.renderReport,\n\t            renderReport = _ref2$renderReport === undefined ? true : _ref2$renderReport,\n\t            _ref2$storage = _ref2.storage,\n\t            storage = _ref2$storage === undefined ? true : _ref2$storage,\n\t            _ref2$user = _ref2.user,\n\t            user = _ref2$user === undefined ? '' : _ref2$user;\n\t\n\t        var product, instruments, i, accessCode, result;\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                product = null;\n\t\n\t                // Show loading div\n\t\n\t                this.api.elements.productElement.style.display = 'none';\n\t                this.api.elements.loadingElement.style.display = 'block';\n\t\n\t                if (!storage) {\n\t                  _context.next = 18;\n\t                  break;\n\t                }\n\t\n\t                _context.prev = 4;\n\t                _context.next = 7;\n\t                return this.loadFromStorage(productId, user);\n\t\n\t              case 7:\n\t                product = _context.sent;\n\t                _context.next = 16;\n\t                break;\n\t\n\t              case 10:\n\t                _context.prev = 10;\n\t                _context.t0 = _context['catch'](4);\n\t                _context.next = 14;\n\t                return this.requestProduct(productId, user);\n\t\n\t              case 14:\n\t                product = _context.sent;\n\t\n\t                // Store the requested product in the local store for future requests\n\t                this.storeInStorage(productId, product, user);\n\t\n\t              case 16:\n\t                _context.next = 19;\n\t                break;\n\t\n\t              case 18:\n\t                product = this.requestProduct(productId, user);\n\t\n\t              case 19:\n\t                instruments = product.slots.instruments;\n\t\n\t                this.triggerEvent('instruments-loaded', instruments);\n\t\n\t                if (storage) {\n\t                  // Filter any instruments that already have been completed\n\t                  // Prevents unnecessary requests to the API\n\t                  instruments = instruments.filter(function (i) {\n\t                    var status = _this.getInstrumentStatusFromStorage(i.access_code);\n\t\n\t                    switch (status) {\n\t                      case 'ended-items':\n\t                      case 'ended-skipped':\n\t                      case 'ended-time':\n\t                        _this.triggerEvent('instrument-already-completed', { accessCode: i.access_code, status: status });\n\t                        return false;\n\t                      case 'in-progress':\n\t                        _this.triggerEvent('instrument-continue', { accessCode: i.access_code, status: status });\n\t                        return true;\n\t                      case 'started':\n\t                      default:\n\t                        return true;\n\t                    }\n\t                  });\n\t                }\n\t\n\t                i = 0;\n\t\n\t              case 23:\n\t                if (!(i < instruments.length)) {\n\t                  _context.next = 34;\n\t                  break;\n\t                }\n\t\n\t                accessCode = instruments[i].access_code;\n\t                _context.next = 27;\n\t                return this.requestInstrument(accessCode);\n\t\n\t              case 27:\n\t                result = _context.sent;\n\t\n\t                this.triggerEvent('instrument-started', { accessCode: accessCode, status: result.status });\n\t                _context.next = 31;\n\t                return this.processApiInstrumentResponse(accessCode, result, storage);\n\t\n\t              case 31:\n\t                i += 1;\n\t                _context.next = 23;\n\t                break;\n\t\n\t              case 34:\n\t                if (!renderReport) {\n\t                  _context.next = 37;\n\t                  break;\n\t                }\n\t\n\t                _context.next = 37;\n\t                return this.loadReport(product.reports[0].access_code);\n\t\n\t              case 37:\n\t\n\t                // Remove this session from the local storage\n\t                this.clearStorage(productId);\n\t                // Trigger event and pass product info\n\t                this.triggerEvent('product-completed', product);\n\t                /*\n\t                  .then(() => product)\n\t                  // Also add a catch, this removes the need of having individual catches for every fetch\n\t                  .catch((e) => {\n\t                    if (storage) {\n\t                      // Something could be wrong with our local store,\n\t                      // clear it to prevent any future errors\n\t                      this.clearStorage(productId);\n\t                    }\n\t                    return this.handleException(e);\n\t                  });*/\n\t                return _context.abrupt('return', product);\n\t\n\t              case 40:\n\t              case 'end':\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this, [[4, 10]]);\n\t      }));\n\t\n\t      function loadProduct(_x2, _x3) {\n\t        return _ref.apply(this, arguments);\n\t      }\n\t\n\t      return loadProduct;\n\t    }()\n\t\n\t    /**\n\t    /**\n\t     * Load an render a report by its access code\n\t     * @param  {String} accessCode Access code for report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadReport',\n\t    value: function () {\n\t      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(accessCode) {\n\t        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            metaData = _ref4.metaData,\n\t            metaHmac = _ref4.metaHmac;\n\t\n\t        var body;\n\t        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t                _context2.next = 2;\n\t                return this.requestReport(accessCode, { metaData: metaData, metaHmac: metaHmac });\n\t\n\t              case 2:\n\t                body = _context2.sent;\n\t\n\t\n\t                this.renderReport(body);\n\t                this.triggerEvent('report-ready');\n\t\n\t              case 5:\n\t              case 'end':\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, _callee2, this);\n\t      }));\n\t\n\t      function loadReport(_x5, _x6) {\n\t        return _ref3.apply(this, arguments);\n\t      }\n\t\n\t      return loadReport;\n\t    }()\n\t\n\t    /**\n\t     * Process a single API response from an instrument call\n\t     *\n\t     * When the instrument is still running the function will return a new Promise\n\t     * that waits for a form submit.\n\t     *\n\t     * @param  {String} accessCode Access code for this instrument\n\t     * @param  {String} status     Current instrument status\n\t     * @param  {Array} resources  Resources to load\n\t     * @param  {String} body       Html to put in the DOM\n\t     * @param  {Boolean} storage   Whether to load instrument input data from local storage\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'processApiInstrumentResponse',\n\t    value: function () {\n\t      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(accessCode, _ref6, storage) {\n\t        var _this2 = this;\n\t\n\t        var status = _ref6.status,\n\t            resources = _ref6.resources,\n\t            body = _ref6.body;\n\t\n\t        var _loop, _ret;\n\t\n\t        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t          while (1) {\n\t            switch (_context4.prev = _context4.next) {\n\t              case 0:\n\t                _context4.t0 = status;\n\t                _context4.next = _context4.t0 === 'started' ? 3 : _context4.t0 === 'in-progress' ? 3 : _context4.t0 === 'ended-items' ? 17 : _context4.t0 === 'ended-skipped' ? 17 : _context4.t0 === 'ended-time' ? 17 : 20;\n\t                break;\n\t\n\t              case 3:\n\t                this.updateInstrumentInStorage(accessCode, status);\n\t\n\t                // Wait for resources to load\n\t                _context4.next = 6;\n\t                return Its123.loadResources(resources);\n\t\n\t              case 6:\n\t\n\t                this.renderInstrument(body);\n\t\n\t                // Try to load item data from local storage when enabled\n\t                if (storage) {\n\t                  this.loadInstrumentStateFromStorage(accessCode);\n\t                  this.bindInstrumentStorageListeners(accessCode);\n\t                }\n\t\n\t                this.runResourceFunctions(resources);\n\t\n\t                _loop = regeneratorRuntime.mark(function _callee3() {\n\t                  var form, result;\n\t                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t                    while (1) {\n\t                      switch (_context3.prev = _context3.next) {\n\t                        case 0:\n\t                          _context3.next = 2;\n\t                          return _this2.waitForInstrumentToSubmit();\n\t\n\t                        case 2:\n\t                          form = _context3.sent;\n\t                          _context3.prev = 3;\n\t                          _context3.next = 6;\n\t                          return (0, _promise.tryAtMost)(_this2.api.maxRetries, _this2.api.retryDelay, function () {\n\t                            return _this2.submitInstrumentData(accessCode, form);\n\t                          });\n\t\n\t                        case 6:\n\t                          result = _context3.sent;\n\t                          _context3.next = 9;\n\t                          return _this2.processApiInstrumentResponse(accessCode, result);\n\t\n\t                        case 9:\n\t                          _context3.t0 = _context3.sent;\n\t                          return _context3.abrupt('return', {\n\t                            v: _context3.t0\n\t                          });\n\t\n\t                        case 13:\n\t                          _context3.prev = 13;\n\t                          _context3.t1 = _context3['catch'](3);\n\t\n\t                          _this2.triggerEvent('instrument-submit-failed', null, 'error');\n\t                          throw _context3.t1;\n\t\n\t                        case 17:\n\t                        case 'end':\n\t                          return _context3.stop();\n\t                      }\n\t                    }\n\t                  }, _callee3, _this2, [[3, 13]]);\n\t                });\n\t\n\t              case 10:\n\t                if (false) {\n\t                  _context4.next = 17;\n\t                  break;\n\t                }\n\t\n\t                return _context4.delegateYield(_loop(), 't1', 12);\n\t\n\t              case 12:\n\t                _ret = _context4.t1;\n\t\n\t                if (!((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\")) {\n\t                  _context4.next = 15;\n\t                  break;\n\t                }\n\t\n\t                return _context4.abrupt('return', _ret.v);\n\t\n\t              case 15:\n\t                _context4.next = 10;\n\t                break;\n\t\n\t              case 17:\n\t                this.updateInstrumentInStorage(accessCode, status);\n\t                this.triggerEvent('instrument-completed', { accessCode: accessCode, status: status });\n\t                return _context4.abrupt('break', 21);\n\t\n\t              case 20:\n\t                throw new Error('Unexpected instrument status ' + status);\n\t\n\t              case 21:\n\t                return _context4.abrupt('return', {});\n\t\n\t              case 22:\n\t              case 'end':\n\t                return _context4.stop();\n\t            }\n\t          }\n\t        }, _callee4, this);\n\t      }));\n\t\n\t      function processApiInstrumentResponse(_x8, _x9, _x10) {\n\t        return _ref5.apply(this, arguments);\n\t      }\n\t\n\t      return processApiInstrumentResponse;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request a product from the api\n\t     *\n\t     * Promise returns an object contains all the instruments\n\t     * @param  {String} productId      ID of the product\n\t     * @param  {String} user UUID v4\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProduct',\n\t    value: function () {\n\t      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(productId, user) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t          while (1) {\n\t            switch (_context5.prev = _context5.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey,\n\t                  'X-123test-ProductId': productId\n\t                };\n\t\n\t\n\t                if (user && user.length === 36) {\n\t                  headers['X-123test-Respondent'] = user;\n\t                }\n\t\n\t                _context5.prev = 2;\n\t                _context5.next = 5;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/request-product', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 5:\n\t                response = _context5.sent;\n\t                _context5.next = 8;\n\t                return response.json();\n\t\n\t              case 8:\n\t                json = _context5.sent;\n\t                return _context5.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 12:\n\t                _context5.prev = 12;\n\t                _context5.t0 = _context5['catch'](2);\n\t                _context5.t1 = _context5.t0.status;\n\t                _context5.next = _context5.t1 === 401 ? 17 : _context5.t1 === 403 ? 19 : 21;\n\t                break;\n\t\n\t              case 17:\n\t                this.triggerEvent('invalid-api-key', _context5.t0.response, 'error');\n\t                return _context5.abrupt('break', 21);\n\t\n\t              case 19:\n\t                this.triggerEvent('product-no-access', _context5.t0.response, 'error');\n\t                return _context5.abrupt('break', 21);\n\t\n\t              case 21:\n\t                throw Error;\n\t\n\t              case 22:\n\t              case 'end':\n\t                return _context5.stop();\n\t            }\n\t          }\n\t        }, _callee5, this, [[2, 12]]);\n\t      }));\n\t\n\t      function requestProduct(_x11, _x12) {\n\t        return _ref7.apply(this, arguments);\n\t      }\n\t\n\t      return requestProduct;\n\t    }()\n\t\n\t    /**\n\t     * Get information about a specific product running\n\t     * @param  {String} accessCode Access code for product run\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestProductInfo',\n\t    value: function () {\n\t      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(accessCode) {\n\t        var headers, response, json;\n\t        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t          while (1) {\n\t            switch (_context6.prev = _context6.next) {\n\t              case 0:\n\t                headers = {\n\t                  'Content-Type': 'application/json',\n\t                  'X-123test-ApiKey': this.api.apiKey\n\t                };\n\t                _context6.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/product/' + accessCode + '/overview', {\n\t                  method: 'GET',\n\t                  mode: 'cors',\n\t                  headers: headers\n\t                });\n\t\n\t              case 3:\n\t                response = _context6.sent;\n\t                _context6.next = 6;\n\t                return response.json();\n\t\n\t              case 6:\n\t                json = _context6.sent;\n\t                return _context6.abrupt('return', {\n\t                  slots: json.slots,\n\t                  reports: json.reports,\n\t                  product_access_code: json.product_access_code\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context6.stop();\n\t            }\n\t          }\n\t        }, _callee6, this);\n\t      }));\n\t\n\t      function requestProductInfo(_x13) {\n\t        return _ref8.apply(this, arguments);\n\t      }\n\t\n\t      return requestProductInfo;\n\t    }()\n\t\n\t    /**\n\t     * (Async) Request an instrument from the api\n\t     *\n\t     * Promise returns body and resources that need to be loaded\n\t     * @param  {String} accessCode Access code for the instrument\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestInstrument',\n\t    value: function () {\n\t      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(accessCode) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t          while (1) {\n\t            switch (_context7.prev = _context7.next) {\n\t              case 0:\n\t                _context7.next = 2;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'GET',\n\t                  cache: 'no-cache',\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode\n\t                  }\n\t                });\n\t\n\t              case 2:\n\t                response = _context7.sent;\n\t                _context7.next = 5;\n\t                return response.text();\n\t\n\t              case 5:\n\t                body = _context7.sent;\n\t                return _context7.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 7:\n\t              case 'end':\n\t                return _context7.stop();\n\t            }\n\t          }\n\t        }, _callee7, this);\n\t      }));\n\t\n\t      function requestInstrument(_x14) {\n\t        return _ref9.apply(this, arguments);\n\t      }\n\t\n\t      return requestInstrument;\n\t    }()\n\t\n\t    /**\n\t     * Attach a listener to the instrument, makes use of a promise that resolves\n\t     * when the button is clicked.\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'waitForInstrumentToSubmit',\n\t    value: function waitForInstrumentToSubmit() {\n\t      var className = 'its123-disabled-loading';\n\t      var loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n\t      var form = document.querySelector(this.api.elements.instrumentFormSelector);\n\t      var button = form.querySelector('button[type=submit]');\n\t\n\t      // Re-enable button if it was previously disabled by this function\n\t      if (button.classList.contains(className)) {\n\t        button.disabled = false;\n\t        button.innerHTML = button.getAttribute('data-label') ? button.getAttribute('data-label') : button.innerText;\n\t        button.classList.remove(className);\n\t      }\n\t\n\t      // Return a new promise that resolves when the submit button is clicked\n\t      return new Promise(function (resolve) {\n\t        form.addEventListener('submit', function (event) {\n\t          event.preventDefault();\n\t\n\t          // Disable submit button and add class so that we know that\n\t          // the api js disabled the button (and not individual instrument js)\n\t          button.disabled = true;\n\t          button.classList.add(className);\n\t          // Save content to an attribute to reset it later\n\t          button.setAttribute('data-label', button.innerText);\n\t          button.innerHTML = loadingIcon;\n\t\n\t          resolve({ form: form, event: event });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Submit a form to the API for a given instrument\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @param  {Object} form       HTML Form\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'submitInstrumentData',\n\t    value: function () {\n\t      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(accessCode, form) {\n\t        var response, body;\n\t        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n\t          while (1) {\n\t            switch (_context8.prev = _context8.next) {\n\t              case 0:\n\t                this.triggerEvent('instrument-submitting', accessCode);\n\t\n\t                _context8.next = 3;\n\t                return (0, _request2['default'])(this.api.endpoint + '/instrument/next-items', {\n\t                  method: 'POST',\n\t                  cache: 'no-cache',\n\t                  body: new FormData(form),\n\t                  headers: {\n\t                    'X-123test-ApiKey': this.api.apiKey,\n\t                    'X-123test-InstrumentRun': accessCode\n\t                  }\n\t                });\n\t\n\t              case 3:\n\t                response = _context8.sent;\n\t                _context8.next = 6;\n\t                return response.text();\n\t\n\t              case 6:\n\t                body = _context8.sent;\n\t                return _context8.abrupt('return', {\n\t                  body: body,\n\t                  status: response.headers.get('X-123test-InstrumentStatus'),\n\t                  resources: JSON.parse(response.headers.get('X-123test-Resources'))\n\t                });\n\t\n\t              case 8:\n\t              case 'end':\n\t                return _context8.stop();\n\t            }\n\t          }\n\t        }, _callee8, this);\n\t      }));\n\t\n\t      function submitInstrumentData(_x15, _x16) {\n\t        return _ref10.apply(this, arguments);\n\t      }\n\t\n\t      return submitInstrumentData;\n\t    }()\n\t\n\t    /**\n\t     * Output an instrument to the DOM\n\t     * @param  {String} body Instrument HTML\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderInstrument',\n\t    value: function renderInstrument(body) {\n\t      this.api.elements.productElement.innerHTML = body;\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.productElement.style.display = 'initial';\n\t    }\n\t\n\t    /**\n\t     * Add event listeners to radio buttons in instruments\n\t     * @param  {String} accessCode Access code of the instrument\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'bindInstrumentStorageListeners',\n\t    value: function bindInstrumentStorageListeners(accessCode) {\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var _loop2 = function _loop2(e) {\n\t        var input = elements[e];\n\t\n\t        if (input.type === 'radio') {\n\t          input.addEventListener('change', function () {\n\t            (0, _storage.saveToStorage)(accessCode + '-' + input.name, input.value);\n\t          });\n\t        }\n\t      };\n\t\n\t      for (var e = 0; e < elements.length; e++) {\n\t        _loop2(e);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Apply stored instrument state to the DOM\n\t     * @param  {String} accessCode Access code of instrument\n\t     * @return {null}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadInstrumentStateFromStorage',\n\t    value: function loadInstrumentStateFromStorage(accessCode) {\n\t      var elements = this.api.elements.productElement.getElementsByTagName('input');\n\t\n\t      var loaded = false;\n\t      for (var e = 0; e < elements.length; e += 1) {\n\t        var _input = elements[e];\n\t        var value = (0, _storage.getFromStorage)(accessCode + '-' + _input.name);\n\t\n\t        if (value !== null && _input.type === 'radio' && _input.value === value) {\n\t          _input.checked = true;\n\t          loaded = true;\n\t        }\n\t      }\n\t\n\t      if (loaded) {\n\t        this.triggerEvent('instrument-item-data-loaded', { access_code: accessCode });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Render a report to the DOM\n\t     *\n\t     * @param  {String} body report body\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'renderReport',\n\t    value: function renderReport(body) {\n\t      this.api.elements.productElement.style.display = 'none';\n\t      this.api.elements.loadingElement.style.display = 'none';\n\t      this.api.elements.reportElement.innerHTML = body;\n\t      this.api.elements.reportElement.style.display = 'initial';\n\t    }\n\t\n\t    /**\n\t     * Add new resources to the DOM\n\t     *\n\t     * Returns a new Promise that resolves when all critical assets have been loaded\n\t     * @param  {Object} resources The resources to load\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'runResourceFunctions',\n\t\n\t\n\t    /**\n\t     * Run functions for a list of JS resources\n\t     * @param  {Object} resources\n\t     * @return {void}\n\t     */\n\t    value: function runResourceFunctions(resources) {\n\t      var _this3 = this;\n\t\n\t      Object.keys(resources).forEach(function (key) {\n\t        var resource = resources[key];\n\t        if (resource.type === 'js' && typeof window.its123[resource.func] === 'function') {\n\t          // Give context as variable\n\t          window.its123[resource.func](_this3.api);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Request a report by its access code\n\t     * @param  {String} accessCode access code for the report\n\t     * @param  {String} metaData  Base64 encoded meta data\n\t     * @param  {String} metaHmac  HMAC for meta data\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'requestReport',\n\t    value: function requestReport(accessCode) {\n\t      var _ref11 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          _ref11$metaData = _ref11.metaData,\n\t          metaData = _ref11$metaData === undefined ? '' : _ref11$metaData,\n\t          _ref11$metaHmac = _ref11.metaHmac,\n\t          metaHmac = _ref11$metaHmac === undefined ? '' : _ref11$metaHmac;\n\t\n\t      var url = void 0;\n\t      if (metaData.length <= 0 || metaHmac.length <= 0) {\n\t        url = this.api.endpoint + '/report/' + accessCode;\n\t      } else {\n\t        url = this.api.endpoint + '/report/' + accessCode + '?meta=' + metaData + '&meta_hmac=' + metaHmac;\n\t      }\n\t\n\t      return (0, _request2['default'])(url, {\n\t        headers: {\n\t          'X-123test-ApiKey': this.api.apiKey\n\t        },\n\t        method: 'GET',\n\t        mode: 'cors'\n\t      }).then(function (response) {\n\t        return response.text();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Store a product in the local storage\n\t     * @param  {String} productId Id of the product\n\t     * @param  {object} product   Product information\n\t     * @param  {String} user      User UUID\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'storeInStorage',\n\t    value: function storeInStorage(productId, product, user) {\n\t      // Add new record\n\t      var productData = _extends({}, product, {\n\t        user: user,\n\t        started: Date.now()\n\t      });\n\t\n\t      (0, _storage.saveToStorage)('its123Api-' + productId, JSON.stringify(productData));\n\t    }\n\t\n\t    /**\n\t     * Load a product from the storage\n\t     *\n\t     * Returns a promise that resolves when a local storage item has been found.\n\t     * @param  {String} productId             Product id\n\t     * @param  {String} [user='']             User UUID\n\t     * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadFromStorage',\n\t    value: function loadFromStorage(productId) {\n\t      var user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t      var expirationTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3600;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var item = (0, _storage.getFromStorage)('its123Api-' + productId);\n\t\n\t        // Check browser support and presence of object\n\t        if (!item) {\n\t          reject('No storage present');\n\t        }\n\t\n\t        var product = JSON.parse(item);\n\t\n\t        if (product && product.started + expirationTime * 1000 > Date.now() && product.user === user) {\n\t          console.info('Loading instrument from local storage.');\n\t          resolve(product);\n\t        }\n\t\n\t        reject('No product in local store');\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Clear the local storage of all items associatd with a product id\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearStorage',\n\t    value: function clearStorage(productId) {\n\t      var productJson = (0, _storage.getFromStorage)('its123Api-' + productId);\n\t\n\t      if (!productJson) {\n\t        return;\n\t      }\n\t\n\t      var product = JSON.parse(productJson);\n\t      product.slots.instruments.forEach(function (i) {\n\t        (0, _storage.removeFromStorage)('its123Api-' + i.access_code);\n\t        (0, _storage.removeFromStorageByPrefix)(i.access_code);\n\t      });\n\t      (0, _storage.removeFromStorage)('its123Api-' + productId);\n\t    }\n\t\n\t    /**\n\t     * Set the current state of an instrument in storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @param  {String} status     Status indicator\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'updateInstrumentInStorage',\n\t    value: function updateInstrumentInStorage(accessCode, status) {\n\t      (0, _storage.saveToStorage)('its123Api-' + accessCode, status);\n\t    }\n\t\n\t    /**\n\t     * Get status of an instrument from storage\n\t     * @param  {String} accessCode Access code for instrument\n\t     * @return {String|null} Status\n\t     */\n\t\n\t  }, {\n\t    key: 'getInstrumentStatusFromStorage',\n\t    value: function getInstrumentStatusFromStorage(accessCode) {\n\t      return (0, _storage.getFromStorage)('its123Api-' + accessCode);\n\t    }\n\t\n\t    /**\n\t     * Log an exception and retrow\n\t     * @param  {Object} e The error\n\t     * @return null\n\t     */\n\t\n\t  }, {\n\t    key: 'handleException',\n\t    value: function handleException(e) {\n\t      if (this.api.logErrors) {\n\t        switch (e.status) {\n\t          case 401:\n\t          case 403:\n\t            console.error('123test API Permission error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          case 404:\n\t            console.error('123test API Product error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          case 408:\n\t            console.error('123test API Server error: API is unavailable');\n\t            this.triggerEvent('api-unavailable', e, 'error');\n\t            break;\n\t          case 500:\n\t            console.error('123test API Server error: ' + e.message + ' (' + e.status + ')');\n\t            break;\n\t          default:\n\t            // Unknown error\n\t            throw e;\n\t        }\n\t      }\n\t\n\t      // Trigger that a unhandled exception has occurred\n\t      this.triggerEvent('error', e, 'error');\n\t    }\n\t\n\t    /**\n\t     * Utility function to get the url to a PDF report for a given product object\n\t     * @param  {Object} product               The product that contains the report list\n\t     * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n\t     * @return {String}                       Url to the report\n\t     */\n\t\n\t  }, {\n\t    key: 'getPdfUrl',\n\t    value: function getPdfUrl(product) {\n\t      var typeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'standard';\n\t\n\t      // Get correct type id for premium or standard pdf\n\t      var type = typeName === 'premium' ? 221 : 121;\n\t      var report = product.reports.find(function (r) {\n\t        return r.type === type;\n\t      });\n\t\n\t      if (!report) {\n\t        throw new Error('No access code for pdf is present in product object.');\n\t      }\n\t\n\t      return this.api.endpoint + '/report/' + report.access_code;\n\t    }\n\t\n\t    /**\n\t     * Send a new event to the listeners\n\t     * @param  {String} eventName Name of the event\n\t     * @param  {Object} data      Optional event data\n\t     * @param  {String} type      Event type\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'triggerEvent',\n\t    value: function triggerEvent(eventName, data) {\n\t      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';\n\t\n\t      var listeners = this.eventListeners[eventName];\n\t\n\t      if (listeners && listeners.length > 0) {\n\t        listeners.forEach(function (l) {\n\t          return l(data);\n\t        });\n\t      }\n\t\n\t      if (this.api.environment === 'development') {\n\t        switch (type) {\n\t          case 'error':\n\t            console.error('Event triggered: ' + eventName);\n\t            break;\n\t          case 'info':\n\t          default:\n\t            console.info('Event triggered: ' + eventName);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register a new event listener\n\t     * @param  {String|Array}   eventName Name of the event\n\t     * @param  {Function} callback\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(eventName, callback) {\n\t      var _this4 = this;\n\t\n\t      var events = [];\n\t\n\t      if (Array.isArray(eventName)) {\n\t        events = eventName;\n\t      } else {\n\t        events.push(eventName);\n\t      }\n\t\n\t      events.forEach(function (event) {\n\t        if (!_this4.eventListeners[event]) {\n\t          _this4.eventListeners[event] = [];\n\t        }\n\t\n\t        _this4.eventListeners[event].push(callback);\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'loadResources',\n\t    value: function loadResources(resources) {\n\t      // Map each resource to a new Promise\n\t      // JS resources resolve when loaded\n\t      return Promise.all(Object.keys(resources).map(function (key) {\n\t        return new Promise(function (resolve, reject) {\n\t          var resourceItem = resources[key];\n\t          var head = document.getElementsByTagName('head')[0];\n\t\n\t          // Do not load resources that are already present\n\t          if (document.querySelectorAll('script[src=\"' + resourceItem.path + '\"]').length > 0) {\n\t            resolve();\n\t            return;\n\t          }\n\t          switch (resourceItem.type) {\n\t            case 'js':\n\t              {\n\t                var script = document.createElement('script');\n\t                script.src = resourceItem.path;\n\t                // Allow some files to not load asynchronous\n\t                script.async = resourceItem.async || false;\n\t                // Resolve when loaded\n\t                script.onload = resolve;\n\t                // Append to the head of the page\n\t                head.appendChild(script);\n\t              }\n\t              break;\n\t            case 'css':\n\t              {\n\t                var cssLink = document.createElement('link');\n\t                cssLink.rel = 'stylesheet';\n\t                cssLink.type = 'text/css';\n\t                cssLink.media = 'all';\n\t                cssLink.href = resourceItem.path;\n\t                // Append to the head of the page\n\t                head.appendChild(cssLink);\n\t\n\t                // Directy resolve css, not critical\n\t                resolve();\n\t              }\n\t              break;\n\t            default:\n\t              reject('Unknown resource type ' + resourceItem.type);\n\t          }\n\t        });\n\t      }));\n\t    }\n\t  }]);\n\t\n\t  return Its123;\n\t}();\n\t\n\texports['default'] = Its123;\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports['default'] = request;\n\t\n\tvar _promise = __webpack_require__(17);\n\t\n\t/**\n\t * Checks if a network request came back fine, and throws an error if not\n\t *\n\t * @param  {object} response   A response from a network request\n\t *\n\t * @return {object|undefined} Returns either the response, or throws an error\n\t */\n\tfunction checkStatus(response) {\n\t  if (response.status >= 200 && response.status < 300) {\n\t    return response;\n\t  }\n\t\n\t  var error = new Error(response.statusText);\n\t  error.response = response;\n\t  error.status = response.status;\n\t\n\t  throw error;\n\t}\n\t\n\t/**\n\t * Requests a URL, returning a promise\n\t *\n\t * @param  {string} url       The URL we want to request\n\t * @param  {object} [options] The options we want to pass to \"fetch\"\n\t * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n\t * @return {object}           The response data\n\t */\n\tfunction request(url) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8000;\n\t\n\t  return (0, _promise.timeoutPromise)(timeout, fetch(url, options).then(checkStatus));\n\t}\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.saveToStorage = saveToStorage;\n\texports.getFromStorage = getFromStorage;\n\texports.removeFromStorage = removeFromStorage;\n\texports.removeFromStorageByPrefix = removeFromStorageByPrefix;\n\t// Bind store\n\tvar store = window.localStorage;\n\t\n\t// Test local storage support\n\t// Adapted from https://github.com/Modernizr/Modernizr\n\tvar storeAvailable = function () {\n\t  var testItem = 'test';\n\t  try {\n\t    store.setItem(testItem, testItem);\n\t    store.removeItem(testItem);\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}();\n\t\n\t/**\n\t * Save an item to storage\n\t * @param  {String} id   identifier\n\t * @param  {mixed} item Value to store\n\t * @return {null}\n\t */\n\tfunction saveToStorage(id, item) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  store.setItem(id, item);\n\t}\n\t\n\t/**\n\t * Retrieve an item from storage\n\t * @param  {String} id Storage identifier\n\t * @return {mixed}    The value\n\t */\n\tfunction getFromStorage(id) {\n\t  if (!storeAvailable) {\n\t    return null;\n\t  }\n\t\n\t  return store.getItem(id);\n\t}\n\t\n\t/**\n\t * Remove item from storage\n\t * @param  {String} id Storage identifier\n\t * @return {null}\n\t */\n\tfunction removeFromStorage(id) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  store.removeItem(id);\n\t}\n\t\n\t/**\n\t * Remove all local storage elements that start with a given prefix\n\t * @param  {String} prefix Prefix to search for\n\t * @return {null}\n\t */\n\tfunction removeFromStorageByPrefix(prefix) {\n\t  if (!storeAvailable) {\n\t    return;\n\t  }\n\t\n\t  for (var i = store.length - 1; i >= 0; i--) {\n\t    if (store.key(i).startsWith(prefix)) {\n\t      store.removeItem(store.key(i));\n\t    }\n\t  }\n\t}\n\n/***/ },\n\n/***/ 43:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\t\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\t\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  runtime.AsyncIterator = AsyncIterator;\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          if (method === \"return\" ||\n\t              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n\t            // A return or throw (when the delegate iterator has no throw\n\t            // method) always terminates the yield* loop.\n\t            context.delegate = null;\n\t\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            var returnMethod = delegate.iterator[\"return\"];\n\t            if (returnMethod) {\n\t              var record = tryCatch(returnMethod, delegate.iterator, arg);\n\t              if (record.type === \"throw\") {\n\t                // If the return method threw an exception, let that\n\t                // exception prevail over the original return or throw.\n\t                method = \"throw\";\n\t                arg = record.arg;\n\t                continue;\n\t              }\n\t            }\n\t\n\t            if (method === \"return\") {\n\t              // Continue with the outer return, now that the delegate\n\t              // iterator has been terminated.\n\t              continue;\n\t            }\n\t          }\n\t\n\t          var record = tryCatch(\n\t            delegate.iterator[method],\n\t            delegate.iterator,\n\t            arg\n\t          );\n\t\n\t          if (record.type === \"throw\") {\n\t            context.delegate = null;\n\t\n\t            // Like returning generator.throw(uncaught), but without the\n\t            // overhead of an extra function call.\n\t            method = \"throw\";\n\t            arg = record.arg;\n\t            continue;\n\t          }\n\t\n\t          // Delegate generator ran and handled its own exceptions so\n\t          // regardless of what the method was, we continue as if it is\n\t          // \"next\" with an undefined arg.\n\t          method = \"next\";\n\t          arg = undefined;\n\t\n\t          var info = record.arg;\n\t          if (info.done) {\n\t            context[delegate.resultName] = info.value;\n\t            context.next = delegate.nextLoc;\n\t          } else {\n\t            state = GenStateSuspendedYield;\n\t            return info;\n\t          }\n\t\n\t          context.delegate = null;\n\t        }\n\t\n\t        if (method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = arg;\n\t\n\t        } else if (method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw arg;\n\t          }\n\t\n\t          if (context.dispatchException(arg)) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            method = \"next\";\n\t            arg = undefined;\n\t          }\n\t\n\t        } else if (method === \"return\") {\n\t          context.abrupt(\"return\", arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          var info = {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            if (context.delegate && method === \"next\") {\n\t              // Deliberately forget the last sent value so that we don't\n\t              // accidentally pass it on to the delegate.\n\t              arg = undefined;\n\t            }\n\t          } else {\n\t            return info;\n\t          }\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(arg) call above.\n\t          method = \"throw\";\n\t          arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t        return !!caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.next = finallyEntry.finallyLoc;\n\t      } else {\n\t        this.complete(record);\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = record.arg;\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(43)))\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// its123api.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7650321b3ed1b6298d5c","import Its123 from './Api/Its123';\n\n// Bind Its123 to the global window\nwindow.Its123 = Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\n * Promise with timeout function\n * @param  {Number} ms      Miliseconds to wait before promise is rejected\n * @param  {Promise} promise The promise to run\n * @return {Promise}         Promise with timeout\n */\nexport function timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    // Create timer that rejects promise after ms miliseconds\n    const timeoutId = setTimeout(() => {\n      const error = new Error('timeout');\n      error.status = 408;\n      reject(error);\n    }, ms);\n\n    // Clear timeout if promise resolves/rejects on its own\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  });\n}\n\n/**\n * Decorates a promis-creating function with a retry functionality (by recursion)\n * @param  {Number}   maxRetries  Max number of retries\n * @param  {Number}   timeout     Miliseconds to wait\n * @param  {Function} fn          Function that creates and returns a promise\n * @param  {Number}   timeoutFactor timeout is multiplied by this factor every retry\n * @param  {Number}   [current=0] Current iteration in the retry loop\n * @return {Promise}\n */\nexport function tryAtMost(maxRetries, timeout, fn, timeoutFactor = 4, current = 0) {\n  return new Promise((resolve, reject) => fn()\n    .then(resolve)\n    .catch(error => {\n      if (current < maxRetries) {\n        setTimeout(() =>\n          resolve(tryAtMost(maxRetries, timeout * timeoutFactor, fn, timeoutFactor, current + 1)),\n          timeout\n        );\n      } else {\n        reject(error);\n      }\n    })\n  );\n}\n\nexport function retryUntilResolved(fn) {\n  return new Promise((resolve) => fn()\n    .then(resolve)\n    .catch(() => resolve(retryUntilResolved(fn)))\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/promise.js","/*\n * 123Test Api v2\n *\n * @author Wouter Bulten <github.com/wouterbulten>\n * @author Theo den Hollander <github.com/theodenhollander>\n * @license\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 123test\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport 'regenerator-runtime/runtime';\n\nimport request from '../util/request';\n\nimport { tryAtMost, retryUntilResolved } from '../util/promise';\n\nimport {\n  saveToStorage,\n  getFromStorage,\n  removeFromStorage,\n  removeFromStorageByPrefix,\n} from '../util/storage';\n\n/**\n * Default configuration for api, can be overriden by user\n * @type {Object}\n */\nconst defaultApiConfig = {\n  // Domain config\n  domain: 'https://api.123test.com',\n  version: 'v2',\n\n  // Environment config\n  logErrors: true,\n  environment: 'production',\n\n  // DOM config\n  elements: {\n    instrumentFormSelector: 'form.its123-instrument',\n    loadingElementId: 'its123api-loading',\n    productElementId: 'its123api-product',\n    reportElementId: 'its123api-report',\n    loadingElement: null,\n    productElement: null,\n    reportElement: null,\n  },\n\n  // Number of retries some fetch request may make\n  maxRetries: 2,\n  // Initial delay before a retry\n  retryDelay: 5000,\n\n  apiKey: 'not-set',\n};\n\n/**\n * Main API class\n */\nclass Its123 {\n\n  /**\n   * Create new Api object\n   * @param  {Object} [apiConfig={}] Api configuration\n   * @return {void}\n   */\n  constructor(apiConfig = {}) {\n    // Set api config to default and override with parameters\n    this.api = {\n      ...defaultApiConfig,\n      ...apiConfig,\n    };\n    // Construct correct api end point\n    this.api.endpoint = `${this.api.domain}/${this.api.version}`;\n    // Set env based on domain\n    this.api.environment =\n      (this.api.domain === 'https://api.123test.dev') ? 'development' : 'production';\n\n    // Check for valid api key\n    if (this.api.apiKey === 'not-set') {\n      throw new Error(\n        'Api key must be set when initalising Its123 object. Please check your api config.',\n      );\n    }\n\n    // Query the DOM and set options\n    this.api.elements.loadingElement = document.getElementById(this.api.elements.loadingElementId);\n    this.api.elements.productElement = document.getElementById(this.api.elements.productElementId);\n    this.api.elements.reportElement = document.getElementById(this.api.elements.reportElementId);\n    if (!this.api.elements.loadingElement\n      || !this.api.elements.productElement || !this.api.elements.reportElement) {\n      throw new Error(\n        'Element for loading, product or report not found. Please check your HTML and Api config.'\n      );\n    }\n\n    // Placeholder for eventlisteners\n    this.eventListeners = {};\n  }\n\n  /**\n   * Load a product\n   *\n   * Runs all the required sub steps from instrument to report. All promises are chained\n   * and the final promise returns the product data when resolved.\n   *\n   * Will automatically render the first report that is available. Set `renderReport` to false\n   * to counter this behaviour.\n   *\n   * Data structure of the product object:\n   *\n   * product = {\n   *  slots: {\n   *    instruments: [],\n   *    respondent: {},\n   *  },\n   *  reports: [],\n   *  access_code: null,\n   * };\n   *\n   * @param  {String} productId product to load\n   * @param  {Boolean} [renderReport=true] Set to true to automatically call the\n   *                                       report render functions\n   * @param  {Boolean} [storage=true]      Set to true to try loading product data\n   *                                       from local storage.\n   * @param  {String}  [user=''] Optional user UUID\n   * @return {Promise}\n   */\n  async loadProduct(productId, { renderReport = true, storage = true, user = '' } = {}) {\n    let product = null;\n\n    // Show loading div\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'block';\n\n    if (storage) {\n      // Try to load product information from local storage, if it fails\n      // fall back to a API request\n      try {\n        product = await this.loadFromStorage(productId, user);\n      } catch (error) {\n        product = await this.requestProduct(productId, user);\n        // Store the requested product in the local store for future requests\n        this.storeInStorage(productId, product, user);\n      }\n    } else {\n      product = this.requestProduct(productId, user);\n    }\n\n    let instruments = product.slots.instruments;\n    this.triggerEvent('instruments-loaded', instruments);\n\n    if (storage) {\n      // Filter any instruments that already have been completed\n      // Prevents unnecessary requests to the API\n      instruments = instruments.filter((i) => {\n        const status = this.getInstrumentStatusFromStorage(i.access_code);\n\n        switch (status) {\n          case 'ended-items':\n          case 'ended-skipped':\n          case 'ended-time':\n            this.triggerEvent('instrument-already-completed',\n              { accessCode: i.access_code, status });\n            return false;\n          case 'in-progress':\n            this.triggerEvent('instrument-continue',\n              { accessCode: i.access_code, status });\n            return true;\n          case 'started':\n          default:\n            return true;\n        }\n      });\n    }\n\n    for (let i = 0; i < instruments.length; i += 1) {\n      const accessCode = instruments[i].access_code;\n\n      const result = await this.requestInstrument(accessCode);\n      this.triggerEvent('instrument-started', { accessCode, status: result.status });\n      await this.processApiInstrumentResponse(accessCode, result, storage);\n    }\n\n\n    if (renderReport) {\n      // All instruments have been completed, render report\n      await this.loadReport(product.reports[0].access_code);\n    }\n\n    // Remove this session from the local storage\n    this.clearStorage(productId);\n    // Trigger event and pass product info\n    this.triggerEvent('product-completed', product);\n    /*\n      .then(() => product)\n      // Also add a catch, this removes the need of having individual catches for every fetch\n      .catch((e) => {\n        if (storage) {\n          // Something could be wrong with our local store,\n          // clear it to prevent any future errors\n          this.clearStorage(productId);\n        }\n        return this.handleException(e);\n      });*/\n    return product;\n  }\n\n  /**\n  /**\n   * Load an render a report by its access code\n   * @param  {String} accessCode Access code for report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  async loadReport(accessCode, { metaData, metaHmac } = {}) {\n    const body = await this.requestReport(accessCode, { metaData, metaHmac });\n\n    this.renderReport(body);\n    this.triggerEvent('report-ready');\n  }\n\n  /**\n   * Process a single API response from an instrument call\n   *\n   * When the instrument is still running the function will return a new Promise\n   * that waits for a form submit.\n   *\n   * @param  {String} accessCode Access code for this instrument\n   * @param  {String} status     Current instrument status\n   * @param  {Array} resources  Resources to load\n   * @param  {String} body       Html to put in the DOM\n   * @param  {Boolean} storage   Whether to load instrument input data from local storage\n   * @return {Promise}\n   */\n  async processApiInstrumentResponse(accessCode, { status, resources, body }, storage) {\n    switch (status) {\n      case 'started':\n      case 'in-progress':\n        this.updateInstrumentInStorage(accessCode, status);\n\n        // Wait for resources to load\n        await Its123.loadResources(resources);\n\n        this.renderInstrument(body);\n\n        // Try to load item data from local storage when enabled\n        if (storage) {\n          this.loadInstrumentStateFromStorage(accessCode);\n          this.bindInstrumentStorageListeners(accessCode);\n        }\n\n        this.runResourceFunctions(resources);\n\n        while (true) {\n          const form = await this.waitForInstrumentToSubmit();\n\n          try {\n            const result = await tryAtMost(this.api.maxRetries, this.api.retryDelay, () =>\n              this.submitInstrumentData(accessCode, form),\n            );\n            // Run function again until instrument has ended\n            return await this.processApiInstrumentResponse(accessCode, result);\n          } catch (error) {\n            this.triggerEvent('instrument-submit-failed', null, 'error');\n            throw error; // Re-trow error to bubble up\n          }\n        }\n      case 'ended-items':\n      case 'ended-skipped':\n      case 'ended-time':\n        this.updateInstrumentInStorage(accessCode, status);\n        this.triggerEvent('instrument-completed', { accessCode, status });\n        break;\n      default:\n        throw new Error(`Unexpected instrument status ${status}`);\n    }\n\n    return {};\n  }\n\n  /**\n   * (Async) Request a product from the api\n   *\n   * Promise returns an object contains all the instruments\n   * @param  {String} productId      ID of the product\n   * @param  {String} user UUID v4\n   * @return {Promise}\n   */\n  async requestProduct(productId, user) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n      'X-123test-ProductId': productId,\n    };\n\n    if (user && user.length === 36) {\n      headers['X-123test-Respondent'] = user;\n    }\n\n    try {\n      const response = await request(`${this.api.endpoint}/product/request-product`, {\n        method: 'GET',\n        mode: 'cors',\n        headers,\n      });\n\n      const json = await response.json();\n      return {\n        slots: json.slots,\n        reports: json.reports,\n        product_access_code: json.product_access_code,\n      };\n    } catch (error) {\n      switch (error.status) {\n        case 401:\n          this.triggerEvent('invalid-api-key', error.response, 'error');\n          break;\n        case 403:\n          this.triggerEvent('product-no-access', error.response, 'error');\n          break;\n        default:\n          // Do nothing\n      }\n\n      throw Error;\n    }\n  }\n\n  /**\n   * Get information about a specific product running\n   * @param  {String} accessCode Access code for product run\n   * @return {Promise}\n   */\n  async requestProductInfo(accessCode) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-123test-ApiKey': this.api.apiKey,\n    };\n\n    const response = await request(`${this.api.endpoint}/product/${accessCode}/overview`, {\n      method: 'GET',\n      mode: 'cors',\n      headers,\n    });\n\n    const json = await response.json();\n\n    return {\n      slots: json.slots,\n      reports: json.reports,\n      product_access_code: json.product_access_code,\n    };\n  }\n\n  /**\n   * (Async) Request an instrument from the api\n   *\n   * Promise returns body and resources that need to be loaded\n   * @param  {String} accessCode Access code for the instrument\n   * @return {Promise}\n   */\n  async requestInstrument(accessCode) {\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    });\n\n    const body = await response.text();\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Attach a listener to the instrument, makes use of a promise that resolves\n   * when the button is clicked.\n   * @return {Promise}\n   */\n  waitForInstrumentToSubmit() {\n    const className = 'its123-disabled-loading';\n    const loadingIcon = '<div class=\"its123-loading-spinner\"><div></div><div></div><div></div></div>';\n    const form = document.querySelector(this.api.elements.instrumentFormSelector);\n    const button = form.querySelector('button[type=submit]');\n\n    // Re-enable button if it was previously disabled by this function\n    if (button.classList.contains(className)) {\n      button.disabled = false;\n      button.innerHTML = (button.getAttribute('data-label')) ?\n        button.getAttribute('data-label') : button.innerText;\n      button.classList.remove(className);\n    }\n\n    // Return a new promise that resolves when the submit button is clicked\n    return new Promise((resolve) => {\n      form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        // Disable submit button and add class so that we know that\n        // the api js disabled the button (and not individual instrument js)\n        button.disabled = true;\n        button.classList.add(className);\n        // Save content to an attribute to reset it later\n        button.setAttribute('data-label', button.innerText);\n        button.innerHTML = loadingIcon;\n\n        resolve({ form, event });\n      });\n    });\n  }\n\n  /**\n   * Submit a form to the API for a given instrument\n   * @param  {String} accessCode Access code of the instrument\n   * @param  {Object} form       HTML Form\n   * @return {Promise}\n   */\n  async submitInstrumentData(accessCode, form) {\n    this.triggerEvent('instrument-submitting', accessCode);\n\n    const response = await request(`${this.api.endpoint}/instrument/next-items`, {\n      method: 'POST',\n      cache: 'no-cache',\n      body: new FormData(form),\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n        'X-123test-InstrumentRun': accessCode,\n      },\n    });\n\n    const body = await response.text();\n\n    return {\n      body,\n      status: response.headers.get('X-123test-InstrumentStatus'),\n      resources: JSON.parse(response.headers.get('X-123test-Resources')),\n    };\n  }\n\n  /**\n   * Output an instrument to the DOM\n   * @param  {String} body Instrument HTML\n   * @return {void}\n   */\n  renderInstrument(body) {\n    this.api.elements.productElement.innerHTML = body;\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.productElement.style.display = 'initial';\n  }\n\n  /**\n   * Add event listeners to radio buttons in instruments\n   * @param  {String} accessCode Access code of the instrument\n   * @return {null}\n   */\n  bindInstrumentStorageListeners(accessCode) {\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    for (let e = 0; e < elements.length; e++) {\n      const input = elements[e];\n\n      if (input.type === 'radio') {\n        input.addEventListener('change', () => {\n          saveToStorage(`${accessCode}-${input.name}`, input.value);\n        });\n      }\n    }\n  }\n\n  /**\n   * Apply stored instrument state to the DOM\n   * @param  {String} accessCode Access code of instrument\n   * @return {null}\n   */\n  loadInstrumentStateFromStorage(accessCode) {\n    const elements = this.api.elements.productElement.getElementsByTagName('input');\n\n    let loaded = false;\n    for (let e = 0; e < elements.length; e += 1) {\n      const input = elements[e];\n      const value = getFromStorage(`${accessCode}-${input.name}`);\n\n      if (value !== null && input.type === 'radio' && input.value === value) {\n        input.checked = true;\n        loaded = true;\n      }\n    }\n\n    if (loaded) {\n      this.triggerEvent('instrument-item-data-loaded', { access_code: accessCode });\n    }\n  }\n\n  /**\n   * Render a report to the DOM\n   *\n   * @param  {String} body report body\n   * @return {Promise}\n   */\n  renderReport(body) {\n    this.api.elements.productElement.style.display = 'none';\n    this.api.elements.loadingElement.style.display = 'none';\n    this.api.elements.reportElement.innerHTML = body;\n    this.api.elements.reportElement.style.display = 'initial';\n  }\n\n  /**\n   * Add new resources to the DOM\n   *\n   * Returns a new Promise that resolves when all critical assets have been loaded\n   * @param  {Object} resources The resources to load\n   * @return {void}\n   */\n  static loadResources(resources) {\n    // Map each resource to a new Promise\n    // JS resources resolve when loaded\n    return Promise.all(Object.keys(resources).map(key => (\n      new Promise((resolve, reject) => {\n        const resourceItem = resources[key];\n        const head = document.getElementsByTagName('head')[0];\n\n        // Do not load resources that are already present\n        if (document.querySelectorAll(`script[src=\"${resourceItem.path}\"]`).length > 0) {\n          resolve();\n          return;\n        }\n        switch (resourceItem.type) {\n          case 'js': {\n            const script = document.createElement('script');\n            script.src = resourceItem.path;\n            // Allow some files to not load asynchronous\n            script.async = resourceItem.async || false;\n            // Resolve when loaded\n            script.onload = resolve;\n            // Append to the head of the page\n            head.appendChild(script);\n          }\n            break;\n          case 'css': {\n            const cssLink = document.createElement('link');\n            cssLink.rel = 'stylesheet';\n            cssLink.type = 'text/css';\n            cssLink.media = 'all';\n            cssLink.href = resourceItem.path;\n            // Append to the head of the page\n            head.appendChild(cssLink);\n\n            // Directy resolve css, not critical\n            resolve();\n          }\n            break;\n          default:\n            reject(`Unknown resource type ${resourceItem.type}`);\n        }\n      })\n    )));\n  }\n\n  /**\n   * Run functions for a list of JS resources\n   * @param  {Object} resources\n   * @return {void}\n   */\n  runResourceFunctions(resources) {\n    Object.keys(resources).forEach((key) => {\n      const resource = resources[key];\n      if (resource.type === 'js'\n        && typeof window.its123[resource.func] === 'function') {\n        // Give context as variable\n        window.its123[resource.func](this.api);\n      }\n    });\n  }\n\n  /**\n   * Request a report by its access code\n   * @param  {String} accessCode access code for the report\n   * @param  {String} metaData  Base64 encoded meta data\n   * @param  {String} metaHmac  HMAC for meta data\n   * @return {Promise}\n   */\n  requestReport(accessCode, { metaData = '', metaHmac = '' } = {}) {\n    let url;\n    if (metaData.length <= 0 || metaHmac.length <= 0) {\n      url = `${this.api.endpoint}/report/${accessCode}`;\n    } else {\n      url = `${this.api.endpoint}/report/${accessCode}?meta=${metaData}&meta_hmac=${metaHmac}`;\n    }\n\n    return request(url, {\n      headers: {\n        'X-123test-ApiKey': this.api.apiKey,\n      },\n      method: 'GET',\n      mode: 'cors',\n    })\n      .then((response) => response.text());\n  }\n\n  /**\n   * Store a product in the local storage\n   * @param  {String} productId Id of the product\n   * @param  {object} product   Product information\n   * @param  {String} user      User UUID\n   * @return {void}\n   */\n  storeInStorage(productId, product, user) {\n    // Add new record\n    const productData = {\n      ...product,\n      user,\n      started: Date.now(),\n    };\n\n    saveToStorage(`its123Api-${productId}`, JSON.stringify(productData));\n  }\n\n  /**\n   * Load a product from the storage\n   *\n   * Returns a promise that resolves when a local storage item has been found.\n   * @param  {String} productId             Product id\n   * @param  {String} [user='']             User UUID\n   * @param  {Number} [expirationTime=3600] Max lifetime of storage entry in seconds\n   * @return {Promise}\n   */\n  loadFromStorage(productId, user = '', expirationTime = 3600) {\n    return new Promise((resolve, reject) => {\n      const item = getFromStorage(`its123Api-${productId}`);\n\n      // Check browser support and presence of object\n      if (!item) {\n        reject('No storage present');\n      }\n\n      const product = JSON.parse(item);\n\n      if (product && (product.started + (expirationTime * 1000)) > Date.now()\n        && product.user === user) {\n        console.info('Loading instrument from local storage.');\n        resolve(product);\n      }\n\n      reject('No product in local store');\n    });\n  }\n\n  /**\n   * Clear the local storage of all items associatd with a product id\n   * @return {void}\n   */\n  clearStorage(productId) {\n    const productJson = getFromStorage(`its123Api-${productId}`);\n\n    if (!productJson) {\n      return;\n    }\n\n    const product = JSON.parse(productJson);\n    product.slots.instruments.forEach(i => {\n      removeFromStorage(`its123Api-${i.access_code}`);\n      removeFromStorageByPrefix(i.access_code);\n    });\n    removeFromStorage(`its123Api-${productId}`);\n  }\n\n  /**\n   * Set the current state of an instrument in storage\n   * @param  {String} accessCode Access code for instrument\n   * @param  {String} status     Status indicator\n   * @return {void}\n   */\n  updateInstrumentInStorage(accessCode, status) {\n    saveToStorage(`its123Api-${accessCode}`, status);\n  }\n\n  /**\n   * Get status of an instrument from storage\n   * @param  {String} accessCode Access code for instrument\n   * @return {String|null} Status\n   */\n  getInstrumentStatusFromStorage(accessCode) {\n    return getFromStorage(`its123Api-${accessCode}`);\n  }\n\n  /**\n   * Log an exception and retrow\n   * @param  {Object} e The error\n   * @return null\n   */\n  handleException(e) {\n    if (this.api.logErrors) {\n      switch (e.status) {\n        case 401:\n        case 403:\n          console.error(`123test API Permission error: ${e.message} (${e.status})`);\n          break;\n        case 404:\n          console.error(`123test API Product error: ${e.message} (${e.status})`);\n          break;\n        case 408:\n          console.error('123test API Server error: API is unavailable');\n          this.triggerEvent('api-unavailable', e, 'error');\n          break;\n        case 500:\n          console.error(`123test API Server error: ${e.message} (${e.status})`);\n          break;\n        default:\n          // Unknown error\n          throw e;\n      }\n    }\n\n    // Trigger that a unhandled exception has occurred\n    this.triggerEvent('error', e, 'error');\n  }\n\n  /**\n   * Utility function to get the url to a PDF report for a given product object\n   * @param  {Object} product               The product that contains the report list\n   * @param  {String} [typeName='standard'] Can be 'standard' or 'premium'\n   * @return {String}                       Url to the report\n   */\n  getPdfUrl(product, typeName = 'standard') {\n    // Get correct type id for premium or standard pdf\n    const type = (typeName === 'premium') ? 221 : 121;\n    const report = product.reports.find((r) => r.type === type);\n\n    if (!report) {\n      throw new Error('No access code for pdf is present in product object.');\n    }\n\n    return `${this.api.endpoint}/report/${report.access_code}`;\n  }\n\n  /**\n   * Send a new event to the listeners\n   * @param  {String} eventName Name of the event\n   * @param  {Object} data      Optional event data\n   * @param  {String} type      Event type\n   * @return {void}\n   */\n  triggerEvent(eventName, data, type = 'info') {\n    const listeners = this.eventListeners[eventName];\n\n    if (listeners && listeners.length > 0) {\n      listeners.forEach((l) => l(data));\n    }\n\n    if (this.api.environment === 'development') {\n      switch (type) {\n        case 'error':\n          console.error(`Event triggered: ${eventName}`);\n          break;\n        case 'info':\n        default:\n          console.info(`Event triggered: ${eventName}`);\n      }\n    }\n  }\n\n  /**\n   * Register a new event listener\n   * @param  {String|Array}   eventName Name of the event\n   * @param  {Function} callback\n   * @return {void}\n   */\n  on(eventName, callback) {\n    let events = [];\n\n    if (Array.isArray(eventName)) {\n      events = eventName;\n    } else {\n      events.push(eventName);\n    }\n\n    events.forEach(event => {\n      if (!this.eventListeners[event]) {\n        this.eventListeners[event] = [];\n      }\n\n      this.eventListeners[event].push(callback);\n    });\n  }\n}\n\nexport default Its123;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Api/Its123.js","import { timeoutPromise } from './promise';\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  error.status = response.status;\n\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @param  {number} [timeout] Amount of seconds before we trigger a timeout\n * @return {object}           The response data\n */\nexport default function request(url, options = {}, timeout = 8000) {\n  return timeoutPromise(timeout, fetch(url, options)\n    .then(checkStatus));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request.js","// Bind store\nconst store = window.localStorage;\n\n// Test local storage support\n// Adapted from https://github.com/Modernizr/Modernizr\nconst storeAvailable = (() => {\n  const testItem = 'test';\n  try {\n    store.setItem(testItem, testItem);\n    store.removeItem(testItem);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * Save an item to storage\n * @param  {String} id   identifier\n * @param  {mixed} item Value to store\n * @return {null}\n */\nexport function saveToStorage(id, item) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  store.setItem(id, item);\n}\n\n/**\n * Retrieve an item from storage\n * @param  {String} id Storage identifier\n * @return {mixed}    The value\n */\nexport function getFromStorage(id) {\n  if (!storeAvailable) {\n    return null;\n  }\n\n  return store.getItem(id);\n}\n\n/**\n * Remove item from storage\n * @param  {String} id Storage identifier\n * @return {null}\n */\nexport function removeFromStorage(id) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  store.removeItem(id);\n}\n\n/**\n * Remove all local storage elements that start with a given prefix\n * @param  {String} prefix Prefix to search for\n * @return {null}\n */\nexport function removeFromStorageByPrefix(prefix) {\n  if (!storeAvailable) {\n    return;\n  }\n\n  for (let i = store.length - 1; i >= 0; i--) {\n    if (store.key(i).startsWith(prefix)) {\n      store.removeItem(store.key(i));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/storage.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 43\n// module chunks = 0 1","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 44\n// module chunks = 0 1"],"sourceRoot":""}